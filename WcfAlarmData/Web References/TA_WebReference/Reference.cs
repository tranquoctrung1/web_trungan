//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WcfAlarmData.TA_WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MapSoap", Namespace="http://tempuri.org/")]
    public partial class Map : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetchanneldetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LatLngOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DologinOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSamplerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelConfigByLoggerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceTokenFromAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTokenLogoutAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusPushNotiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelConfigurationsByLoggerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelLoggerIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Map() {
            this.Url = global::WcfAlarmData.Properties.Settings.Default.WcfAlarmData_TA_WebReference_Map;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataAllCompletedEventHandler GetDataAllCompleted;
        
        /// <remarks/>
        public event GetchanneldetailCompletedEventHandler GetchanneldetailCompleted;
        
        /// <remarks/>
        public event LatLngCompletedEventHandler LatLngCompleted;
        
        /// <remarks/>
        public event LogoCompletedEventHandler LogoCompleted;
        
        /// <remarks/>
        public event GetSiteCompletedEventHandler GetSiteCompleted;
        
        /// <remarks/>
        public event DologinCompletedEventHandler DologinCompleted;
        
        /// <remarks/>
        public event ResetSamplerCompletedEventHandler ResetSamplerCompleted;
        
        /// <remarks/>
        public event GetChannelConfigByLoggerIDCompletedEventHandler GetChannelConfigByLoggerIDCompleted;
        
        /// <remarks/>
        public event GetDeviceTokenFromAppCompletedEventHandler GetDeviceTokenFromAppCompleted;
        
        /// <remarks/>
        public event PushNotificationCompletedEventHandler PushNotificationCompleted;
        
        /// <remarks/>
        public event SendNotificationCompletedEventHandler SendNotificationCompleted;
        
        /// <remarks/>
        public event RemoveTokenLogoutAppCompletedEventHandler RemoveTokenLogoutAppCompleted;
        
        /// <remarks/>
        public event SubmitNotificationCompletedEventHandler SubmitNotificationCompleted;
        
        /// <remarks/>
        public event UpdateStatusPushNotiCompletedEventHandler UpdateStatusPushNotiCompleted;
        
        /// <remarks/>
        public event GetChannelConfigurationsByLoggerIDCompletedEventHandler GetChannelConfigurationsByLoggerIDCompleted;
        
        /// <remarks/>
        public event GetChannelLoggerIDCompletedEventHandler GetChannelLoggerIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GroupLogger[] GetDataAll(string username) {
            object[] results = this.Invoke("GetDataAll", new object[] {
                        username});
            return ((GroupLogger[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAllAsync(string username) {
            this.GetDataAllAsync(username, null);
        }
        
        /// <remarks/>
        public void GetDataAllAsync(string username, object userState) {
            if ((this.GetDataAllOperationCompleted == null)) {
                this.GetDataAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataAllOperationCompleted);
            }
            this.InvokeAsync("GetDataAll", new object[] {
                        username}, this.GetDataAllOperationCompleted, userState);
        }
        
        private void OnGetDataAllOperationCompleted(object arg) {
            if ((this.GetDataAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataAllCompleted(this, new GetDataAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getchanneldetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoggerData[] Getchanneldetail(string channel, string startDate, string endDate, bool isGraph) {
            object[] results = this.Invoke("Getchanneldetail", new object[] {
                        channel,
                        startDate,
                        endDate,
                        isGraph});
            return ((LoggerData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetchanneldetailAsync(string channel, string startDate, string endDate, bool isGraph) {
            this.GetchanneldetailAsync(channel, startDate, endDate, isGraph, null);
        }
        
        /// <remarks/>
        public void GetchanneldetailAsync(string channel, string startDate, string endDate, bool isGraph, object userState) {
            if ((this.GetchanneldetailOperationCompleted == null)) {
                this.GetchanneldetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetchanneldetailOperationCompleted);
            }
            this.InvokeAsync("Getchanneldetail", new object[] {
                        channel,
                        startDate,
                        endDate,
                        isGraph}, this.GetchanneldetailOperationCompleted, userState);
        }
        
        private void OnGetchanneldetailOperationCompleted(object arg) {
            if ((this.GetchanneldetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetchanneldetailCompleted(this, new GetchanneldetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LatLng", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public toado LatLng(string userName) {
            object[] results = this.Invoke("LatLng", new object[] {
                        userName});
            return ((toado)(results[0]));
        }
        
        /// <remarks/>
        public void LatLngAsync(string userName) {
            this.LatLngAsync(userName, null);
        }
        
        /// <remarks/>
        public void LatLngAsync(string userName, object userState) {
            if ((this.LatLngOperationCompleted == null)) {
                this.LatLngOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatLngOperationCompleted);
            }
            this.InvokeAsync("LatLng", new object[] {
                        userName}, this.LatLngOperationCompleted, userState);
        }
        
        private void OnLatLngOperationCompleted(object arg) {
            if ((this.LatLngCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LatLngCompleted(this, new LatLngCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Logo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public logo Logo(string path) {
            object[] results = this.Invoke("Logo", new object[] {
                        path});
            return ((logo)(results[0]));
        }
        
        /// <remarks/>
        public void LogoAsync(string path) {
            this.LogoAsync(path, null);
        }
        
        /// <remarks/>
        public void LogoAsync(string path, object userState) {
            if ((this.LogoOperationCompleted == null)) {
                this.LogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoOperationCompleted);
            }
            this.InvokeAsync("Logo", new object[] {
                        path}, this.LogoOperationCompleted, userState);
        }
        
        private void OnLogoOperationCompleted(object arg) {
            if ((this.LogoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoCompleted(this, new LogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public mySite GetSite(string siteID) {
            object[] results = this.Invoke("GetSite", new object[] {
                        siteID});
            return ((mySite)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteAsync(string siteID) {
            this.GetSiteAsync(siteID, null);
        }
        
        /// <remarks/>
        public void GetSiteAsync(string siteID, object userState) {
            if ((this.GetSiteOperationCompleted == null)) {
                this.GetSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteOperationCompleted);
            }
            this.InvokeAsync("GetSite", new object[] {
                        siteID}, this.GetSiteOperationCompleted, userState);
        }
        
        private void OnGetSiteOperationCompleted(object arg) {
            if ((this.GetSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteCompleted(this, new GetSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Dologin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public myLogin Dologin(string user, string pass) {
            object[] results = this.Invoke("Dologin", new object[] {
                        user,
                        pass});
            return ((myLogin)(results[0]));
        }
        
        /// <remarks/>
        public void DologinAsync(string user, string pass) {
            this.DologinAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void DologinAsync(string user, string pass, object userState) {
            if ((this.DologinOperationCompleted == null)) {
                this.DologinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDologinOperationCompleted);
            }
            this.InvokeAsync("Dologin", new object[] {
                        user,
                        pass}, this.DologinOperationCompleted, userState);
        }
        
        private void OnDologinOperationCompleted(object arg) {
            if ((this.DologinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DologinCompleted(this, new DologinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetSampler", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public result_sampler ResetSampler(string ip, string port, string partnerid) {
            object[] results = this.Invoke("ResetSampler", new object[] {
                        ip,
                        port,
                        partnerid});
            return ((result_sampler)(results[0]));
        }
        
        /// <remarks/>
        public void ResetSamplerAsync(string ip, string port, string partnerid) {
            this.ResetSamplerAsync(ip, port, partnerid, null);
        }
        
        /// <remarks/>
        public void ResetSamplerAsync(string ip, string port, string partnerid, object userState) {
            if ((this.ResetSamplerOperationCompleted == null)) {
                this.ResetSamplerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSamplerOperationCompleted);
            }
            this.InvokeAsync("ResetSampler", new object[] {
                        ip,
                        port,
                        partnerid}, this.ResetSamplerOperationCompleted, userState);
        }
        
        private void OnResetSamplerOperationCompleted(object arg) {
            if ((this.ResetSamplerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSamplerCompleted(this, new ResetSamplerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChannelConfigByLoggerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tChannelConfigurations[] GetChannelConfigByLoggerID(string loggerId) {
            object[] results = this.Invoke("GetChannelConfigByLoggerID", new object[] {
                        loggerId});
            return ((tChannelConfigurations[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelConfigByLoggerIDAsync(string loggerId) {
            this.GetChannelConfigByLoggerIDAsync(loggerId, null);
        }
        
        /// <remarks/>
        public void GetChannelConfigByLoggerIDAsync(string loggerId, object userState) {
            if ((this.GetChannelConfigByLoggerIDOperationCompleted == null)) {
                this.GetChannelConfigByLoggerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelConfigByLoggerIDOperationCompleted);
            }
            this.InvokeAsync("GetChannelConfigByLoggerID", new object[] {
                        loggerId}, this.GetChannelConfigByLoggerIDOperationCompleted, userState);
        }
        
        private void OnGetChannelConfigByLoggerIDOperationCompleted(object arg) {
            if ((this.GetChannelConfigByLoggerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelConfigByLoggerIDCompleted(this, new GetChannelConfigByLoggerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeviceTokenFromApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDeviceTokenFromApp(string username, string deviceToken) {
            object[] results = this.Invoke("GetDeviceTokenFromApp", new object[] {
                        username,
                        deviceToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceTokenFromAppAsync(string username, string deviceToken) {
            this.GetDeviceTokenFromAppAsync(username, deviceToken, null);
        }
        
        /// <remarks/>
        public void GetDeviceTokenFromAppAsync(string username, string deviceToken, object userState) {
            if ((this.GetDeviceTokenFromAppOperationCompleted == null)) {
                this.GetDeviceTokenFromAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceTokenFromAppOperationCompleted);
            }
            this.InvokeAsync("GetDeviceTokenFromApp", new object[] {
                        username,
                        deviceToken}, this.GetDeviceTokenFromAppOperationCompleted, userState);
        }
        
        private void OnGetDeviceTokenFromAppOperationCompleted(object arg) {
            if ((this.GetDeviceTokenFromAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceTokenFromAppCompleted(this, new GetDeviceTokenFromAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PushNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PushNotification(string[] fcmToken, string titleNoti, string bodyNoti) {
            this.Invoke("PushNotification", new object[] {
                        fcmToken,
                        titleNoti,
                        bodyNoti});
        }
        
        /// <remarks/>
        public void PushNotificationAsync(string[] fcmToken, string titleNoti, string bodyNoti) {
            this.PushNotificationAsync(fcmToken, titleNoti, bodyNoti, null);
        }
        
        /// <remarks/>
        public void PushNotificationAsync(string[] fcmToken, string titleNoti, string bodyNoti, object userState) {
            if ((this.PushNotificationOperationCompleted == null)) {
                this.PushNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushNotificationOperationCompleted);
            }
            this.InvokeAsync("PushNotification", new object[] {
                        fcmToken,
                        titleNoti,
                        bodyNoti}, this.PushNotificationOperationCompleted, userState);
        }
        
        private void OnPushNotificationOperationCompleted(object arg) {
            if ((this.PushNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendNotification(string DeviceToken, string title, string msg) {
            object[] results = this.Invoke("SendNotification", new object[] {
                        DeviceToken,
                        title,
                        msg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendNotificationAsync(string DeviceToken, string title, string msg) {
            this.SendNotificationAsync(DeviceToken, title, msg, null);
        }
        
        /// <remarks/>
        public void SendNotificationAsync(string DeviceToken, string title, string msg, object userState) {
            if ((this.SendNotificationOperationCompleted == null)) {
                this.SendNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNotificationOperationCompleted);
            }
            this.InvokeAsync("SendNotification", new object[] {
                        DeviceToken,
                        title,
                        msg}, this.SendNotificationOperationCompleted, userState);
        }
        
        private void OnSendNotificationOperationCompleted(object arg) {
            if ((this.SendNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNotificationCompleted(this, new SendNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveTokenLogoutApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveTokenLogoutApp(string token) {
            object[] results = this.Invoke("RemoveTokenLogoutApp", new object[] {
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTokenLogoutAppAsync(string token) {
            this.RemoveTokenLogoutAppAsync(token, null);
        }
        
        /// <remarks/>
        public void RemoveTokenLogoutAppAsync(string token, object userState) {
            if ((this.RemoveTokenLogoutAppOperationCompleted == null)) {
                this.RemoveTokenLogoutAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTokenLogoutAppOperationCompleted);
            }
            this.InvokeAsync("RemoveTokenLogoutApp", new object[] {
                        token}, this.RemoveTokenLogoutAppOperationCompleted, userState);
        }
        
        private void OnRemoveTokenLogoutAppOperationCompleted(object arg) {
            if ((this.RemoveTokenLogoutAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTokenLogoutAppCompleted(this, new RemoveTokenLogoutAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitNotification(string loggerID, string title, string body) {
            object[] results = this.Invoke("SubmitNotification", new object[] {
                        loggerID,
                        title,
                        body});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitNotificationAsync(string loggerID, string title, string body) {
            this.SubmitNotificationAsync(loggerID, title, body, null);
        }
        
        /// <remarks/>
        public void SubmitNotificationAsync(string loggerID, string title, string body, object userState) {
            if ((this.SubmitNotificationOperationCompleted == null)) {
                this.SubmitNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitNotificationOperationCompleted);
            }
            this.InvokeAsync("SubmitNotification", new object[] {
                        loggerID,
                        title,
                        body}, this.SubmitNotificationOperationCompleted, userState);
        }
        
        private void OnSubmitNotificationOperationCompleted(object arg) {
            if ((this.SubmitNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitNotificationCompleted(this, new SubmitNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatusPushNoti", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStatusPushNoti(string token, bool status) {
            object[] results = this.Invoke("UpdateStatusPushNoti", new object[] {
                        token,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStatusPushNotiAsync(string token, bool status) {
            this.UpdateStatusPushNotiAsync(token, status, null);
        }
        
        /// <remarks/>
        public void UpdateStatusPushNotiAsync(string token, bool status, object userState) {
            if ((this.UpdateStatusPushNotiOperationCompleted == null)) {
                this.UpdateStatusPushNotiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusPushNotiOperationCompleted);
            }
            this.InvokeAsync("UpdateStatusPushNoti", new object[] {
                        token,
                        status}, this.UpdateStatusPushNotiOperationCompleted, userState);
        }
        
        private void OnUpdateStatusPushNotiOperationCompleted(object arg) {
            if ((this.UpdateStatusPushNotiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusPushNotiCompleted(this, new UpdateStatusPushNotiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChannelConfigurationsByLoggerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MChannel[] GetChannelConfigurationsByLoggerID(string loggerId) {
            object[] results = this.Invoke("GetChannelConfigurationsByLoggerID", new object[] {
                        loggerId});
            return ((MChannel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelConfigurationsByLoggerIDAsync(string loggerId) {
            this.GetChannelConfigurationsByLoggerIDAsync(loggerId, null);
        }
        
        /// <remarks/>
        public void GetChannelConfigurationsByLoggerIDAsync(string loggerId, object userState) {
            if ((this.GetChannelConfigurationsByLoggerIDOperationCompleted == null)) {
                this.GetChannelConfigurationsByLoggerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelConfigurationsByLoggerIDOperationCompleted);
            }
            this.InvokeAsync("GetChannelConfigurationsByLoggerID", new object[] {
                        loggerId}, this.GetChannelConfigurationsByLoggerIDOperationCompleted, userState);
        }
        
        private void OnGetChannelConfigurationsByLoggerIDOperationCompleted(object arg) {
            if ((this.GetChannelConfigurationsByLoggerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelConfigurationsByLoggerIDCompleted(this, new GetChannelConfigurationsByLoggerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChannelLoggerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MChannelNew[] GetChannelLoggerID(string loggerId) {
            object[] results = this.Invoke("GetChannelLoggerID", new object[] {
                        loggerId});
            return ((MChannelNew[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelLoggerIDAsync(string loggerId) {
            this.GetChannelLoggerIDAsync(loggerId, null);
        }
        
        /// <remarks/>
        public void GetChannelLoggerIDAsync(string loggerId, object userState) {
            if ((this.GetChannelLoggerIDOperationCompleted == null)) {
                this.GetChannelLoggerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelLoggerIDOperationCompleted);
            }
            this.InvokeAsync("GetChannelLoggerID", new object[] {
                        loggerId}, this.GetChannelLoggerIDOperationCompleted, userState);
        }
        
        private void OnGetChannelLoggerIDOperationCompleted(object arg) {
            if ((this.GetChannelLoggerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelLoggerIDCompleted(this, new GetChannelLoggerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GroupLogger {
        
        private string displayGroupField;
        
        private string nameField;
        
        private string districtField;
        
        private DataAll[] lstDataAllField;
        
        /// <remarks/>
        public string DisplayGroup {
            get {
                return this.displayGroupField;
            }
            set {
                this.displayGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string District {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public DataAll[] lstDataAll {
            get {
                return this.lstDataAllField;
            }
            set {
                this.lstDataAllField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DataAll {
        
        private string siteIdField;
        
        private string siteAliasNameField;
        
        private string locationField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        private string loggerIdField;
        
        private System.Nullable<double> labelAnchorXField;
        
        private System.Nullable<double> labelAnchorYField;
        
        private GroupChannels[] lstGroupChannelsField;
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteAliasName {
            get {
                return this.siteAliasNameField;
            }
            set {
                this.siteAliasNameField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LabelAnchorX {
            get {
                return this.labelAnchorXField;
            }
            set {
                this.labelAnchorXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LabelAnchorY {
            get {
                return this.labelAnchorYField;
            }
            set {
                this.labelAnchorYField = value;
            }
        }
        
        /// <remarks/>
        public GroupChannels[] lstGroupChannels {
            get {
                return this.lstGroupChannelsField;
            }
            set {
                this.lstGroupChannelsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GroupChannels {
        
        private string groupChannelField;
        
        private MChannel[] channelsField;
        
        /// <remarks/>
        public string GroupChannel {
            get {
                return this.groupChannelField;
            }
            set {
                this.groupChannelField = value;
            }
        }
        
        /// <remarks/>
        public MChannel[] Channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MChannel {
        
        private string channelIdField;
        
        private string loggerIdField;
        
        private string channelNameField;
        
        private string unitField;
        
        private string descriptionField;
        
        private System.Nullable<bool> forwardFlowField;
        
        private System.Nullable<bool> reverseFlowField;
        
        private int statusField;
        
        private string timeStampField;
        
        private string lastValueField;
        
        private string indexTimeStampField;
        
        private string lastIndexField;
        
        private bool displayOnLabelField;
        
        private string strTimeStampField;
        
        private string yyyyField;
        
        private string mmField;
        
        private string ddField;
        
        private string hhField;
        
        private string mmField1;
        
        /// <remarks/>
        public string ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ForwardFlow {
            get {
                return this.forwardFlowField;
            }
            set {
                this.forwardFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ReverseFlow {
            get {
                return this.reverseFlowField;
            }
            set {
                this.reverseFlowField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LastValue {
            get {
                return this.lastValueField;
            }
            set {
                this.lastValueField = value;
            }
        }
        
        /// <remarks/>
        public string IndexTimeStamp {
            get {
                return this.indexTimeStampField;
            }
            set {
                this.indexTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LastIndex {
            get {
                return this.lastIndexField;
            }
            set {
                this.lastIndexField = value;
            }
        }
        
        /// <remarks/>
        public bool DisplayOnLabel {
            get {
                return this.displayOnLabelField;
            }
            set {
                this.displayOnLabelField = value;
            }
        }
        
        /// <remarks/>
        public string StrTimeStamp {
            get {
                return this.strTimeStampField;
            }
            set {
                this.strTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string yyyy {
            get {
                return this.yyyyField;
            }
            set {
                this.yyyyField = value;
            }
        }
        
        /// <remarks/>
        public string MM {
            get {
                return this.mmField;
            }
            set {
                this.mmField = value;
            }
        }
        
        /// <remarks/>
        public string dd {
            get {
                return this.ddField;
            }
            set {
                this.ddField = value;
            }
        }
        
        /// <remarks/>
        public string HH {
            get {
                return this.hhField;
            }
            set {
                this.hhField = value;
            }
        }
        
        /// <remarks/>
        public string mm {
            get {
                return this.mmField1;
            }
            set {
                this.mmField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MChannelNew {
        
        private string channelIdField;
        
        private string loggerIdField;
        
        private string channelNameField;
        
        /// <remarks/>
        public string ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class tChannelConfigurations {
        
        private string channelIdField;
        
        private string loggerIdField;
        
        private string siteIdField;
        
        private string telephoneNumberField;
        
        private string startHourField;
        
        private string channelNameField;
        
        private string unitField;
        
        private string descriptionField;
        
        private System.Nullable<bool> pressure1Field;
        
        private System.Nullable<bool> pressure2Field;
        
        private System.Nullable<bool> forwardFlowField;
        
        private System.Nullable<bool> reverseFlowField;
        
        private string timeStampField;
        
        private string lastValueField;
        
        private string indexTimeStampField;
        
        private string lastIndexField;
        
        private System.Nullable<bool> displayOnLabelField;
        
        private System.Nullable<bool> channelOtherField;
        
        private string baseminField;
        
        private string basemaxField;
        
        private string groupChannelField;
        
        private System.Nullable<bool> displayOnGraphField;
        
        private string baselineField;
        
        /// <remarks/>
        public string ChannelId {
            get {
                return this.channelIdField;
            }
            set {
                this.channelIdField = value;
            }
        }
        
        /// <remarks/>
        public string LoggerId {
            get {
                return this.loggerIdField;
            }
            set {
                this.loggerIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string TelephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                this.telephoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string StartHour {
            get {
                return this.startHourField;
            }
            set {
                this.startHourField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Pressure1 {
            get {
                return this.pressure1Field;
            }
            set {
                this.pressure1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Pressure2 {
            get {
                return this.pressure2Field;
            }
            set {
                this.pressure2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ForwardFlow {
            get {
                return this.forwardFlowField;
            }
            set {
                this.forwardFlowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ReverseFlow {
            get {
                return this.reverseFlowField;
            }
            set {
                this.reverseFlowField = value;
            }
        }
        
        /// <remarks/>
        public string TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LastValue {
            get {
                return this.lastValueField;
            }
            set {
                this.lastValueField = value;
            }
        }
        
        /// <remarks/>
        public string IndexTimeStamp {
            get {
                return this.indexTimeStampField;
            }
            set {
                this.indexTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string LastIndex {
            get {
                return this.lastIndexField;
            }
            set {
                this.lastIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> DisplayOnLabel {
            get {
                return this.displayOnLabelField;
            }
            set {
                this.displayOnLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ChannelOther {
            get {
                return this.channelOtherField;
            }
            set {
                this.channelOtherField = value;
            }
        }
        
        /// <remarks/>
        public string basemin {
            get {
                return this.baseminField;
            }
            set {
                this.baseminField = value;
            }
        }
        
        /// <remarks/>
        public string basemax {
            get {
                return this.basemaxField;
            }
            set {
                this.basemaxField = value;
            }
        }
        
        /// <remarks/>
        public string GroupChannel {
            get {
                return this.groupChannelField;
            }
            set {
                this.groupChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> DisplayOnGraph {
            get {
                return this.displayOnGraphField;
            }
            set {
                this.displayOnGraphField = value;
            }
        }
        
        /// <remarks/>
        public string Baseline {
            get {
                return this.baselineField;
            }
            set {
                this.baselineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class result_sampler {
        
        private string resultField;
        
        private string knumberField;
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Knumber {
            get {
                return this.knumberField;
            }
            set {
                this.knumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class myLogin {
        
        private string usernameField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class mySite {
        
        private string siteIDField;
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class logo {
        
        private string pathField;
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class toado {
        
        private string latField;
        
        private string lngField;
        
        /// <remarks/>
        public string Lat {
            get {
                return this.latField;
            }
            set {
                this.latField = value;
            }
        }
        
        /// <remarks/>
        public string Lng {
            get {
                return this.lngField;
            }
            set {
                this.lngField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LoggerData {
        
        private System.Nullable<System.DateTime> timeStampField;
        
        private System.Nullable<double> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDataAllCompletedEventHandler(object sender, GetDataAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GroupLogger[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupLogger[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetchanneldetailCompletedEventHandler(object sender, GetchanneldetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetchanneldetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetchanneldetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoggerData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoggerData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LatLngCompletedEventHandler(object sender, LatLngCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LatLngCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LatLngCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public toado Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((toado)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LogoCompletedEventHandler(object sender, LogoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public logo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((logo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSiteCompletedEventHandler(object sender, GetSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mySite Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mySite)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DologinCompletedEventHandler(object sender, DologinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DologinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DologinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myLogin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myLogin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetSamplerCompletedEventHandler(object sender, ResetSamplerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetSamplerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetSamplerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result_sampler Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result_sampler)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChannelConfigByLoggerIDCompletedEventHandler(object sender, GetChannelConfigByLoggerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelConfigByLoggerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelConfigByLoggerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tChannelConfigurations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tChannelConfigurations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDeviceTokenFromAppCompletedEventHandler(object sender, GetDeviceTokenFromAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceTokenFromAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceTokenFromAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PushNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendNotificationCompletedEventHandler(object sender, SendNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveTokenLogoutAppCompletedEventHandler(object sender, RemoveTokenLogoutAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTokenLogoutAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTokenLogoutAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitNotificationCompletedEventHandler(object sender, SubmitNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateStatusPushNotiCompletedEventHandler(object sender, UpdateStatusPushNotiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStatusPushNotiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStatusPushNotiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChannelConfigurationsByLoggerIDCompletedEventHandler(object sender, GetChannelConfigurationsByLoggerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelConfigurationsByLoggerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelConfigurationsByLoggerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MChannel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MChannel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChannelLoggerIDCompletedEventHandler(object sender, GetChannelLoggerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelLoggerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelLoggerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MChannelNew[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MChannelNew[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591