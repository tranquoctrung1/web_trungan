#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="web_dht_r02")]
public partial class FMM_SGWDCDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertDeviceStatus(DeviceStatus instance);
  partial void UpdateDeviceStatus(DeviceStatus instance);
  partial void DeleteDeviceStatus(DeviceStatus instance);
  partial void InsertMeterAccreditationType(MeterAccreditationType instance);
  partial void UpdateMeterAccreditationType(MeterAccreditationType instance);
  partial void DeleteMeterAccreditationType(MeterAccreditationType instance);
  partial void InsertMeterFile(MeterFile instance);
  partial void UpdateMeterFile(MeterFile instance);
  partial void DeleteMeterFile(MeterFile instance);
  partial void InsertLogger(Logger instance);
  partial void UpdateLogger(Logger instance);
  partial void DeleteLogger(Logger instance);
  partial void InsertSiteLevel(SiteLevel instance);
  partial void UpdateSiteLevel(SiteLevel instance);
  partial void DeleteSiteLevel(SiteLevel instance);
  partial void InsertSiteGroup(SiteGroup instance);
  partial void UpdateSiteGroup(SiteGroup instance);
  partial void DeleteSiteGroup(SiteGroup instance);
  partial void InsertSiteCompany(SiteCompany instance);
  partial void UpdateSiteCompany(SiteCompany instance);
  partial void DeleteSiteCompany(SiteCompany instance);
  partial void InsertSiteAvailability(SiteAvailability instance);
  partial void UpdateSiteAvailability(SiteAvailability instance);
  partial void DeleteSiteAvailability(SiteAvailability instance);
  partial void InsertSiteStatus(SiteStatus instance);
  partial void UpdateSiteStatus(SiteStatus instance);
  partial void DeleteSiteStatus(SiteStatus instance);
  partial void InsertSiteMeterDirection(SiteMeterDirection instance);
  partial void UpdateSiteMeterDirection(SiteMeterDirection instance);
  partial void DeleteSiteMeterDirection(SiteMeterDirection instance);
  partial void InsertUserStaff(UserStaff instance);
  partial void UpdateUserStaff(UserStaff instance);
  partial void DeleteUserStaff(UserStaff instance);
  partial void InsertManualData(ManualData instance);
  partial void UpdateManualData(ManualData instance);
  partial void DeleteManualData(ManualData instance);
  partial void InsertSiteFile(SiteFile instance);
  partial void UpdateSiteFile(SiteFile instance);
  partial void DeleteSiteFile(SiteFile instance);
  partial void InsertUserRole(UserRole instance);
  partial void UpdateUserRole(UserRole instance);
  partial void DeleteUserRole(UserRole instance);
  partial void InsertChannelUnit(ChannelUnit instance);
  partial void UpdateChannelUnit(ChannelUnit instance);
  partial void DeleteChannelUnit(ChannelUnit instance);
  partial void InsertSiteConfig(SiteConfig instance);
  partial void UpdateSiteConfig(SiteConfig instance);
  partial void DeleteSiteConfig(SiteConfig instance);
  partial void InsertChannelConfig(ChannelConfig instance);
  partial void UpdateChannelConfig(ChannelConfig instance);
  partial void DeleteChannelConfig(ChannelConfig instance);
  partial void InsertMeter(Meter instance);
  partial void UpdateMeter(Meter instance);
  partial void DeleteMeter(Meter instance);
  partial void InsertGisSite(GisSite instance);
  partial void UpdateGisSite(GisSite instance);
  partial void DeleteGisSite(GisSite instance);
  partial void InsertSiteGroup2(SiteGroup2 instance);
  partial void UpdateSiteGroup2(SiteGroup2 instance);
  partial void DeleteSiteGroup2(SiteGroup2 instance);
  partial void InsertTransmitter(Transmitter instance);
  partial void UpdateTransmitter(Transmitter instance);
  partial void DeleteTransmitter(Transmitter instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertCover(Cover instance);
  partial void UpdateCover(Cover instance);
  partial void DeleteCover(Cover instance);
  partial void InsertSiteGroup3(SiteGroup3 instance);
  partial void UpdateSiteGroup3(SiteGroup3 instance);
  partial void DeleteSiteGroup3(SiteGroup3 instance);
  partial void InsertSiteGroup4(SiteGroup4 instance);
  partial void UpdateSiteGroup4(SiteGroup4 instance);
  partial void DeleteSiteGroup4(SiteGroup4 instance);
  partial void InsertSiteGroup5(SiteGroup5 instance);
  partial void UpdateSiteGroup5(SiteGroup5 instance);
  partial void DeleteSiteGroup5(SiteGroup5 instance);
  partial void InsertSite(Site instance);
  partial void UpdateSite(Site instance);
  partial void DeleteSite(Site instance);
  partial void InsertMapSite(MapSite instance);
  partial void UpdateMapSite(MapSite instance);
  partial void DeleteMapSite(MapSite instance);
  partial void InsertMapChannel(MapChannel instance);
  partial void UpdateMapChannel(MapChannel instance);
  partial void DeleteMapChannel(MapChannel instance);
  #endregion
	
	public FMM_SGWDCDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["web_dht_r02ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public FMM_SGWDCDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public FMM_SGWDCDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public FMM_SGWDCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public FMM_SGWDCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<DeviceStatus> DeviceStatus
	{
		get
		{
			return this.GetTable<DeviceStatus>();
		}
	}
	
	public System.Data.Linq.Table<MeterAccreditationType> MeterAccreditationTypes
	{
		get
		{
			return this.GetTable<MeterAccreditationType>();
		}
	}
	
	public System.Data.Linq.Table<MeterFile> MeterFiles
	{
		get
		{
			return this.GetTable<MeterFile>();
		}
	}
	
	public System.Data.Linq.Table<Logger> Loggers
	{
		get
		{
			return this.GetTable<Logger>();
		}
	}
	
	public System.Data.Linq.Table<SiteLevel> SiteLevels
	{
		get
		{
			return this.GetTable<SiteLevel>();
		}
	}
	
	public System.Data.Linq.Table<SiteGroup> SiteGroups
	{
		get
		{
			return this.GetTable<SiteGroup>();
		}
	}
	
	public System.Data.Linq.Table<SiteCompany> SiteCompanies
	{
		get
		{
			return this.GetTable<SiteCompany>();
		}
	}
	
	public System.Data.Linq.Table<SiteAvailability> SiteAvailabilities
	{
		get
		{
			return this.GetTable<SiteAvailability>();
		}
	}
	
	public System.Data.Linq.Table<SiteStatus> SiteStatus
	{
		get
		{
			return this.GetTable<SiteStatus>();
		}
	}
	
	public System.Data.Linq.Table<SiteMeterDirection> SiteMeterDirections
	{
		get
		{
			return this.GetTable<SiteMeterDirection>();
		}
	}
	
	public System.Data.Linq.Table<UserStaff> UserStaffs
	{
		get
		{
			return this.GetTable<UserStaff>();
		}
	}
	
	public System.Data.Linq.Table<ReportData> ReportDatas
	{
		get
		{
			return this.GetTable<ReportData>();
		}
	}
	
	public System.Data.Linq.Table<ReportDailyData> ReportDailyDatas
	{
		get
		{
			return this.GetTable<ReportDailyData>();
		}
	}
	
	public System.Data.Linq.Table<ManualData> ManualDatas
	{
		get
		{
			return this.GetTable<ManualData>();
		}
	}
	
	public System.Data.Linq.Table<SiteFile> SiteFiles
	{
		get
		{
			return this.GetTable<SiteFile>();
		}
	}
	
	public System.Data.Linq.Table<SiteHistory> SiteHistories
	{
		get
		{
			return this.GetTable<SiteHistory>();
		}
	}
	
	public System.Data.Linq.Table<UserRole> UserRoles
	{
		get
		{
			return this.GetTable<UserRole>();
		}
	}
	
	public System.Data.Linq.Table<ChannelUnit> ChannelUnits
	{
		get
		{
			return this.GetTable<ChannelUnit>();
		}
	}
	
	public System.Data.Linq.Table<SiteConfig> SiteConfigs
	{
		get
		{
			return this.GetTable<SiteConfig>();
		}
	}
	
	public System.Data.Linq.Table<ChannelConfig> ChannelConfigs
	{
		get
		{
			return this.GetTable<ChannelConfig>();
		}
	}
	
	public System.Data.Linq.Table<Meter> Meters
	{
		get
		{
			return this.GetTable<Meter>();
		}
	}
	
	public System.Data.Linq.Table<SiteMeterHistory> SiteMeterHistories
	{
		get
		{
			return this.GetTable<SiteMeterHistory>();
		}
	}
	
	public System.Data.Linq.Table<SiteTransmitterHistory> SiteTransmitterHistories
	{
		get
		{
			return this.GetTable<SiteTransmitterHistory>();
		}
	}
	
	public System.Data.Linq.Table<SiteLoggerHistory> SiteLoggerHistories
	{
		get
		{
			return this.GetTable<SiteLoggerHistory>();
		}
	}
	
	public System.Data.Linq.Table<GisSite> GisSites
	{
		get
		{
			return this.GetTable<GisSite>();
		}
	}
	
	public System.Data.Linq.Table<ReportSiteMeterHistory> ReportSiteMeterHistories
	{
		get
		{
			return this.GetTable<ReportSiteMeterHistory>();
		}
	}
	
	public System.Data.Linq.Table<ReportSiteTransmitterHistory> ReportSiteTransmitterHistories
	{
		get
		{
			return this.GetTable<ReportSiteTransmitterHistory>();
		}
	}
	
	public System.Data.Linq.Table<ReportSiteLoggerHistory> ReportSiteLoggerHistories
	{
		get
		{
			return this.GetTable<ReportSiteLoggerHistory>();
		}
	}
	
	public System.Data.Linq.Table<SiteGroup2> SiteGroup2s
	{
		get
		{
			return this.GetTable<SiteGroup2>();
		}
	}
	
	public System.Data.Linq.Table<ChartData> ChartDatas
	{
		get
		{
			return this.GetTable<ChartData>();
		}
	}
	
	public System.Data.Linq.Table<Transmitter> Transmitters
	{
		get
		{
			return this.GetTable<Transmitter>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<Cover> Covers
	{
		get
		{
			return this.GetTable<Cover>();
		}
	}
	
	public System.Data.Linq.Table<SiteGroup3> SiteGroup3s
	{
		get
		{
			return this.GetTable<SiteGroup3>();
		}
	}
	
	public System.Data.Linq.Table<SiteGroup4> SiteGroup4s
	{
		get
		{
			return this.GetTable<SiteGroup4>();
		}
	}
	
	public System.Data.Linq.Table<SiteGroup5> SiteGroup5s
	{
		get
		{
			return this.GetTable<SiteGroup5>();
		}
	}
	
	public System.Data.Linq.Table<Site> Sites
	{
		get
		{
			return this.GetTable<Site>();
		}
	}
	
	public System.Data.Linq.Table<MapSite> MapSites
	{
		get
		{
			return this.GetTable<MapSite>();
		}
	}
	
	public System.Data.Linq.Table<MapChannel> MapChannels
	{
		get
		{
			return this.GetTable<MapChannel>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="NVarChar(5)")] string company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Report")]
	public ISingleResult<ReportData> p_Calculate_Daily_Report([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="NVarChar(5)")] string company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, startDate, endDate);
		return ((ISingleResult<ReportData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Logger_Daily_Output")]
	public ISingleResult<ReportDailyData> p_Calculate_Logger_Daily_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="NVarChar(5)")] string company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_By_Company")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_By_Company([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="NVarChar(5)")] string company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_By_Group")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_By_Group([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="VarChar(5)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_By_Level")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_By_Level([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Level", DbType="VarChar(5)")] string level, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), level, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_All")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_All([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_All")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_All1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_InsertOrUpdate")]
	public int p_History_Site_InsertOrUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="VarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Meter", DbType="Bit")] System.Nullable<bool> meter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialMeter", DbType="VarChar(50)")] string serialMeter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Transmitter", DbType="Bit")] System.Nullable<bool> transmitter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialTransmitter", DbType="VarChar(50)")] string serialTransmitter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Logger", DbType="Bit")] System.Nullable<bool> logger, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialLogger", DbType="VarChar(50)")] string serialLogger, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Battery", DbType="Bit")] System.Nullable<bool> battery, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransmitterBattery", DbType="Bit")] System.Nullable<bool> transmitterBattery, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoggerBattery", DbType="Bit")] System.Nullable<bool> loggerBattery, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(255)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Index", DbType="Float")] System.Nullable<double> index, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Success", DbType="Bit")] ref System.Nullable<bool> success)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, date, meter, serialMeter, transmitter, serialTransmitter, logger, serialLogger, battery, transmitterBattery, loggerBattery, description, index, success);
		success = ((System.Nullable<bool>)(result.GetParameterValue(13)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Delete")]
	public ISingleResult<p_History_Site_DeleteResult> p_History_Site_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> success)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, success);
		success = ((System.Nullable<bool>)(result.GetParameterValue(1)));
		return ((ISingleResult<p_History_Site_DeleteResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Test")]
	public ISingleResult<TestResult> Test()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<TestResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Data_Logger_CreateTable")]
	public int p_Data_Logger_CreateTable([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string channelId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), channelId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Meter_Insert")]
	public int p_History_Site_Meter_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldMeterSerial", DbType="NVarChar(50)")] string oldMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewMeterSerial", DbType="NVarChar(50)")] string newMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldIndex", DbType="Float")] System.Nullable<double> oldIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewIndex", DbType="Float")] System.Nullable<double> newIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged, oldMeterSerial, newMeterSerial, oldIndex, newIndex, description);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Meter_Update")]
	public int p_History_Site_Meter_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldMeterSerial", DbType="NVarChar(50)")] string oldMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewMeterSerial", DbType="NVarChar(50)")] string newMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldIndex", DbType="Float")] System.Nullable<double> oldIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewIndex", DbType="Float")] System.Nullable<double> newIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged, oldMeterSerial, newMeterSerial, oldIndex, newIndex, description);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Meter_Delete")]
	public int p_History_Site_Meter_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Transmitter_Insert")]
	public int p_History_Site_Transmitter_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldMeterSerial", DbType="NVarChar(50)")] string oldMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewMeterSerial", DbType="NVarChar(50)")] string newMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldIndex", DbType="Float")] System.Nullable<double> oldIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewIndex", DbType="Float")] System.Nullable<double> newIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged, oldMeterSerial, newMeterSerial, oldIndex, newIndex, description);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Transmitter_Update")]
	public int p_History_Site_Transmitter_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldMeterSerial", DbType="NVarChar(50)")] string oldMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewMeterSerial", DbType="NVarChar(50)")] string newMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldIndex", DbType="Float")] System.Nullable<double> oldIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewIndex", DbType="Float")] System.Nullable<double> newIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged, oldMeterSerial, newMeterSerial, oldIndex, newIndex, description);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Transmitter_Delete")]
	public int p_History_Site_Transmitter_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Logger_Insert")]
	public int p_History_Site_Logger_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldMeterSerial", DbType="NVarChar(50)")] string oldMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewMeterSerial", DbType="NVarChar(50)")] string newMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldIndex", DbType="Float")] System.Nullable<double> oldIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewIndex", DbType="Float")] System.Nullable<double> newIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged, oldMeterSerial, newMeterSerial, oldIndex, newIndex, description);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Logger_Update")]
	public int p_History_Site_Logger_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldMeterSerial", DbType="NVarChar(50)")] string oldMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewMeterSerial", DbType="NVarChar(50)")] string newMeterSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldIndex", DbType="Float")] System.Nullable<double> oldIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewIndex", DbType="Float")] System.Nullable<double> newIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged, oldMeterSerial, newMeterSerial, oldIndex, newIndex, description);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Logger_Delete")]
	public int p_History_Site_Logger_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateChanged", DbType="DateTime")] System.Nullable<System.DateTime> dateChanged)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, dateChanged);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Meter_Select_By_SiteId")]
	public ISingleResult<ReportSiteMeterHistory> p_History_Site_Meter_Select_By_SiteId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId);
		return ((ISingleResult<ReportSiteMeterHistory>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Transmitter_Select_By_SiteId")]
	public ISingleResult<ReportSiteTransmitterHistory> p_History_Site_Transmitter_Select_By_SiteId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId);
		return ((ISingleResult<ReportSiteTransmitterHistory>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_History_Site_Logger_Select_By_SiteId")]
	public ISingleResult<ReportSiteLoggerHistory> p_History_Site_Logger_Select_By_SiteId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId);
		return ((ISingleResult<ReportSiteLoggerHistory>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_One_Group_Daily_Output")]
	public ISingleResult<ChartData> p_Calculate_One_Group_Daily_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="NVarChar(50)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start", DbType="DateTime")] System.Nullable<System.DateTime> start, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, start, end);
		return ((ISingleResult<ChartData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_One_Site_Daily_Output")]
	public ISingleResult<ChartData> p_Calculate_One_Site_Daily_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SiteId", DbType="NVarChar(50)")] string siteId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start", DbType="DateTime")] System.Nullable<System.DateTime> start, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), siteId, start, end);
		return ((ISingleResult<ChartData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_By_Group2")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_By_Group2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="VarChar(5)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_One_Group2_Daily_Output")]
	public ISingleResult<ChartData> p_Calculate_One_Group2_Daily_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="NVarChar(50)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start", DbType="DateTime")] System.Nullable<System.DateTime> start, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, start, end);
		return ((ISingleResult<ChartData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_One_Company_Output")]
	public ISingleResult<ChartData> p_Calculate_One_Company_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="NVarChar(5)")] string company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, startDate, endDate);
		return ((ISingleResult<ChartData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_By_Group3")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_By_Group3([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="VarChar(5)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_By_Group4")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_By_Group4([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="VarChar(5)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_Daily_Output_By_Group5")]
	public ISingleResult<ReportDailyData> p_Calculate_Daily_Output_By_Group5([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="VarChar(5)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, startDate, endDate);
		return ((ISingleResult<ReportDailyData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_One_Group3_Daily_Output")]
	public ISingleResult<ChartData> p_Calculate_One_Group3_Daily_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="NVarChar(50)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start", DbType="DateTime")] System.Nullable<System.DateTime> start, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, start, end);
		return ((ISingleResult<ChartData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_One_Group4_Daily_Output")]
	public ISingleResult<ChartData> p_Calculate_One_Group4_Daily_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="NVarChar(50)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start", DbType="DateTime")] System.Nullable<System.DateTime> start, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, start, end);
		return ((ISingleResult<ChartData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_One_Group5_Daily_Output")]
	public ISingleResult<ChartData> p_Calculate_One_Group5_Daily_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group", DbType="NVarChar(50)")] string group, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start", DbType="DateTime")] System.Nullable<System.DateTime> start, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End", DbType="DateTime")] System.Nullable<System.DateTime> end)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group, start, end);
		return ((ISingleResult<ChartData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Calculate_One_MCompany_Output")]
	public ISingleResult<ChartData> p_Calculate_One_MCompany_Output([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="NVarChar(5)")] string company, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company, startDate, endDate);
		return ((ISingleResult<ChartData>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Map_GetChannels_ByLoggerId")]
	public ISingleResult<MapChannel> p_Map_GetChannels_ByLoggerId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoggerId", DbType="VarChar(50)")] string loggerId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loggerId);
		return ((ISingleResult<MapChannel>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Map_GetSites_ByCompany")]
	public ISingleResult<MapSite> p_Map_GetSites_ByCompany([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Company", DbType="VarChar(50)")] string company)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company);
		return ((ISingleResult<MapSite>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Devices_Status")]
public partial class DeviceStatus : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Status;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public DeviceStatus()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Devices_Meter_Accreditation_Type")]
public partial class MeterAccreditationType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _AccreditationType;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccreditationTypeChanging(string value);
    partial void OnAccreditationTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public MeterAccreditationType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationType", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string AccreditationType
	{
		get
		{
			return this._AccreditationType;
		}
		set
		{
			if ((this._AccreditationType != value))
			{
				this.OnAccreditationTypeChanging(value);
				this.SendPropertyChanging();
				this._AccreditationType = value;
				this.SendPropertyChanged("AccreditationType");
				this.OnAccreditationTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Meter_Files")]
public partial class MeterFile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Serial;
	
	private string _FileName;
	
	private string _MIMEType;
	
	private System.Nullable<int> _Size;
	
	private string _Path;
	
	private System.Nullable<System.DateTime> _UploadDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnMIMETypeChanging(string value);
    partial void OnMIMETypeChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadDateChanged();
    #endregion
	
	public MeterFile()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Serial
	{
		get
		{
			return this._Serial;
		}
		set
		{
			if ((this._Serial != value))
			{
				this.OnSerialChanging(value);
				this.SendPropertyChanging();
				this._Serial = value;
				this.SendPropertyChanged("Serial");
				this.OnSerialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
	public string FileName
	{
		get
		{
			return this._FileName;
		}
		set
		{
			if ((this._FileName != value))
			{
				this.OnFileNameChanging(value);
				this.SendPropertyChanging();
				this._FileName = value;
				this.SendPropertyChanged("FileName");
				this.OnFileNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIMEType", DbType="VarChar(4000)")]
	public string MIMEType
	{
		get
		{
			return this._MIMEType;
		}
		set
		{
			if ((this._MIMEType != value))
			{
				this.OnMIMETypeChanging(value);
				this.SendPropertyChanging();
				this._MIMEType = value;
				this.SendPropertyChanged("MIMEType");
				this.OnMIMETypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
	public System.Nullable<int> Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
	public string Path
	{
		get
		{
			return this._Path;
		}
		set
		{
			if ((this._Path != value))
			{
				this.OnPathChanging(value);
				this.SendPropertyChanging();
				this._Path = value;
				this.SendPropertyChanged("Path");
				this.OnPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UploadDate
	{
		get
		{
			return this._UploadDate;
		}
		set
		{
			if ((this._UploadDate != value))
			{
				this.OnUploadDateChanging(value);
				this.SendPropertyChanging();
				this._UploadDate = value;
				this.SendPropertyChanged("UploadDate");
				this.OnUploadDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Devices_Loggers")]
public partial class Logger : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Serial;
	
	private System.Nullable<System.DateTime> _ReceiptDate;
	
	private string _Provider;
	
	private string _Marks;
	
	private string _Model;
	
	private string _Status;
	
	private System.Nullable<bool> _Installed;
	
	private string _Description;

	private Nullable<DateTime> _DateAccreditation;

	private Nullable<DateTime> _DateInstallBattery;

	private Nullable<int> _YearBattery;

	#region Extensibility Method Definitions
	partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptDateChanged();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnMarksChanging(string value);
    partial void OnMarksChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnInstalledChanging(System.Nullable<bool> value);
    partial void OnInstalledChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();

	partial void OnDateAccreditationChanging(Nullable<DateTime> value);
	partial void OnDateAccreditationChanged();
	partial void OnDateInstallBatteryChanging(Nullable<DateTime> value);
	partial void OnDateInstallBatteryChanged();
	partial void OnYearBatteryChanging(Nullable<int> value);
	partial void OnYearBatteryChanged();
	#endregion

	public Logger()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Serial
	{
		get
		{
			return this._Serial;
		}
		set
		{
			if ((this._Serial != value))
			{
				this.OnSerialChanging(value);
				this.SendPropertyChanging();
				this._Serial = value;
				this.SendPropertyChanged("Serial");
				this.OnSerialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ReceiptDate
	{
		get
		{
			return this._ReceiptDate;
		}
		set
		{
			if ((this._ReceiptDate != value))
			{
				this.OnReceiptDateChanging(value);
				this.SendPropertyChanging();
				this._ReceiptDate = value;
				this.SendPropertyChanged("ReceiptDate");
				this.OnReceiptDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="NVarChar(50)")]
	public string Provider
	{
		get
		{
			return this._Provider;
		}
		set
		{
			if ((this._Provider != value))
			{
				this.OnProviderChanging(value);
				this.SendPropertyChanging();
				this._Provider = value;
				this.SendPropertyChanged("Provider");
				this.OnProviderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marks", DbType="NVarChar(50)")]
	public string Marks
	{
		get
		{
			return this._Marks;
		}
		set
		{
			if ((this._Marks != value))
			{
				this.OnMarksChanging(value);
				this.SendPropertyChanging();
				this._Marks = value;
				this.SendPropertyChanged("Marks");
				this.OnMarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installed", DbType="Bit")]
	public System.Nullable<bool> Installed
	{
		get
		{
			return this._Installed;
		}
		set
		{
			if ((this._Installed != value))
			{
				this.OnInstalledChanging(value);
				this.SendPropertyChanging();
				this._Installed = value;
				this.SendPropertyChanged("Installed");
				this.OnInstalledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateAccreditation", DbType = "Datetime")]
	public Nullable<DateTime> DateAccreditation
	{
		get
		{
			return this._DateAccreditation;
		}
		set
		{
			if ((this._DateAccreditation != value))
			{
				this.OnDateAccreditationChanging(value);
				this.SendPropertyChanging();
				this._DateAccreditation = value;
				this.SendPropertyChanged("DateAccreditation");
				this.OnDateAccreditationChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_YearBattery", DbType = "Int")]
	public Nullable<int> YearBattery
	{
		get
		{
			return this._YearBattery;
		}
		set
		{
			if ((this._YearBattery != value))
			{
				this.OnYearBatteryChanging(value);
				this.SendPropertyChanging();
				this._YearBattery = value;
				this.SendPropertyChanged("YearBattery");
				this.OnYearBatteryChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateInstallBattery", DbType = "Datetime")]
	public Nullable<DateTime> DateInstallBattery
	{
		get
		{
			return this._DateInstallBattery;
		}
		set
		{
			if ((this._DateInstallBattery != value))
			{
				this.OnDateInstallBatteryChanging(value);
				this.SendPropertyChanging();
				this._DateInstallBattery = value;
				this.SendPropertyChanged("DateInstallBattery");
				this.OnDateInstallBatteryChanged();
			}
		}
	}

	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Levels")]
public partial class SiteLevel : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Level;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteLevel()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Level
	{
		get
		{
			return this._Level;
		}
		set
		{
			if ((this._Level != value))
			{
				this.OnLevelChanging(value);
				this.SendPropertyChanging();
				this._Level = value;
				this.SendPropertyChanged("Level");
				this.OnLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Groups")]
public partial class SiteGroup : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Group;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteGroup()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Group
	{
		get
		{
			return this._Group;
		}
		set
		{
			if ((this._Group != value))
			{
				this.OnGroupChanging(value);
				this.SendPropertyChanging();
				this._Group = value;
				this.SendPropertyChanged("Group");
				this.OnGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Companies")]
public partial class SiteCompany : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Company;
	
	private System.Nullable<bool> _Production;
	
	private string _Description;

	private string _Status;
	private string _District;
	private string _Ward;
	private Nullable<int> _AmountDHTKH;
	private Nullable<int> _AmountValve;
	private Nullable<int> _AmountPool;
	private Nullable<int> _AmountTCH;
	private Nullable<double> _NRW;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnProductionChanging(System.Nullable<bool> value);
    partial void OnProductionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();

	partial void OnStatusChanging(string value);
	partial void OnStatusChanged();

	partial void OnDistrictChanging(string value);
	partial void OnDistrictChanged();

	partial void OnWardChanging(string value);
	partial void OnWardChanged();

	partial void OnAmountDHTKHChanging(Nullable<int> value);
	partial void OnAmountDHTKHChanged();

	partial void OnAmountValveChanging(Nullable<int> value);
	partial void OnAmountValveChanged();

	partial void OnAmountPoolChanging(Nullable<int> value);
	partial void OnAmountPoolChanged();

	partial void OnAmountTCHChanging(Nullable<int> value);
	partial void OnAmountTCHChanged();

	partial void OnNRWChanging(Nullable<double> value);
	partial void OnNRWChanged();
	#endregion

	public SiteCompany()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Production", DbType="Bit")]
	public System.Nullable<bool> Production
	{
		get
		{
			return this._Production;
		}
		set
		{
			if ((this._Production != value))
			{
				this.OnProductionChanging(value);
				this.SendPropertyChanging();
				this._Production = value;
				this.SendPropertyChanged("Production");
				this.OnProductionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage= "_Status", DbType="NVarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_District", DbType = "NVarChar(50)")]
	public string District
	{
		get
		{
			return this._District;
		}
		set
		{
			if ((this._District != value))
			{
				this.OnDistrictChanging(value);
				this.SendPropertyChanging();
				this._District = value;
				this.SendPropertyChanged("District");
				this.OnDistrictChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ward", DbType = "NVarChar(50)")]
	public string Ward
	{
		get
		{
			return this._Ward;
		}
		set
		{
			if ((this._Ward != value))
			{
				this.OnWardChanging(value);
				this.SendPropertyChanging();
				this._Ward = value;
				this.SendPropertyChanged("Ward");
				this.OnWardChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmountDHTKH", DbType = "Int")]
	public System.Nullable<int> AmountDHTKH
	{
		get
		{
			return this._AmountDHTKH;
		}
		set
		{
			if ((this._AmountDHTKH != value))
			{
				this.OnAmountDHTKHChanging(value);
				this.SendPropertyChanging();
				this._AmountDHTKH = value;
				this.SendPropertyChanged("AmountDHTKH");
				this.OnAmountDHTKHChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmountValve", DbType = "Int")]
	public System.Nullable<int> AmountValve
	{
		get
		{
			return this._AmountValve;
		}
		set
		{
			if ((this._AmountValve != value))
			{
				this.OnAmountValveChanging(value);
				this.SendPropertyChanging();
				this._AmountValve = value;
				this.SendPropertyChanged("AmountValve");
				this.OnAmountValveChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmountPool", DbType = "Int")]
	public System.Nullable<int> AmountPool
	{
		get
		{
			return this._AmountPool;
		}
		set
		{
			if ((this._AmountPool != value))
			{
				this.OnAmountPoolChanging(value);
				this.SendPropertyChanging();
				this._AmountPool = value;
				this.SendPropertyChanged("AmountPool");
				this.OnAmountPoolChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmountTCH", DbType = "Int")]
	public System.Nullable<int> AmountTCH
	{
		get
		{
			return this._AmountTCH;
		}
		set
		{
			if ((this._AmountTCH != value))
			{
				this.OnAmountTCHChanging(value);
				this.SendPropertyChanging();
				this._AmountTCH = value;
				this.SendPropertyChanged("AmountTCH");
				this.OnAmountTCHChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NRW", DbType = "Float")]
	public System.Nullable<double> NRW
	{
		get
		{
			return this._NRW;
		}
		set
		{
			if ((this._NRW != value))
			{
				this.OnNRWChanging(value);
				this.SendPropertyChanging();
				this._NRW = value;
				this.SendPropertyChanged("NRW");
				this.OnNRWChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}

	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Availabilities")]
public partial class SiteAvailability : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Availability;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAvailabilityChanging(string value);
    partial void OnAvailabilityChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteAvailability()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Availability", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Availability
	{
		get
		{
			return this._Availability;
		}
		set
		{
			if ((this._Availability != value))
			{
				this.OnAvailabilityChanging(value);
				this.SendPropertyChanging();
				this._Availability = value;
				this.SendPropertyChanged("Availability");
				this.OnAvailabilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Status")]
public partial class SiteStatus : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Status;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteStatus()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_MeterDirections")]
public partial class SiteMeterDirection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Direction;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectionChanging(string value);
    partial void OnDirectionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteMeterDirection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Direction
	{
		get
		{
			return this._Direction;
		}
		set
		{
			if ((this._Direction != value))
			{
				this.OnDirectionChanging(value);
				this.SendPropertyChanging();
				this._Direction = value;
				this.SendPropertyChanged("Direction");
				this.OnDirectionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_User_Staffs")]
public partial class UserStaff : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Id;
	
	private string _FirstName;
	
	private string _LastName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
	
	public UserStaff()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class ReportData
{
	
	private string _SiteId;
	
	private string _Location;
	
	private string _NetDirection;
	
	private System.Nullable<double> _PreviousIndex;
	
	private System.Nullable<double> _CurrentIndex;
	
	private System.Nullable<double> _Output;
	
	public ReportData()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", CanBeNull=false)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this._SiteId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location")]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this._Location = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetDirection")]
	public string NetDirection
	{
		get
		{
			return this._NetDirection;
		}
		set
		{
			if ((this._NetDirection != value))
			{
				this._NetDirection = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousIndex")]
	public System.Nullable<double> PreviousIndex
	{
		get
		{
			return this._PreviousIndex;
		}
		set
		{
			if ((this._PreviousIndex != value))
			{
				this._PreviousIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentIndex")]
	public System.Nullable<double> CurrentIndex
	{
		get
		{
			return this._CurrentIndex;
		}
		set
		{
			if ((this._CurrentIndex != value))
			{
				this._CurrentIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Output")]
	public System.Nullable<double> Output
	{
		get
		{
			return this._Output;
		}
		set
		{
			if ((this._Output != value))
			{
				this._Output = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class ReportDailyData
{
	
	private string _SiteId;
	
	private System.DateTime _TimeStamp;
	
	private System.Nullable<double> _Value;
	
	private string _Location;
	
	private string _Marks;
	
	private short _Size;
	
	private bool _NotEnoughData;
	
	public ReportDailyData()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", CanBeNull=false)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this._SiteId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp")]
	public System.DateTime TimeStamp
	{
		get
		{
			return this._TimeStamp;
		}
		set
		{
			if ((this._TimeStamp != value))
			{
				this._TimeStamp = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value")]
	public System.Nullable<double> Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this._Value = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", CanBeNull=false)]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this._Location = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marks", CanBeNull=false)]
	public string Marks
	{
		get
		{
			return this._Marks;
		}
		set
		{
			if ((this._Marks != value))
			{
				this._Marks = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size")]
	public short Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this._Size = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotEnoughData")]
	public bool NotEnoughData
	{
		get
		{
			return this._NotEnoughData;
		}
		set
		{
			if ((this._NotEnoughData != value))
			{
				this._NotEnoughData = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Data_Manual")]
public partial class ManualData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Stt;
	
	private string _SiteId;
	
	private System.Nullable<System.DateTime> _TimeStamp;
	
	private System.Nullable<double> _Index;
	
	private System.Nullable<double> _Output;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSttChanging(int value);
    partial void OnSttChanged();
    partial void OnSiteIdChanging(string value);
    partial void OnSiteIdChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnIndexChanging(System.Nullable<double> value);
    partial void OnIndexChanged();
    partial void OnOutputChanging(System.Nullable<double> value);
    partial void OnOutputChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public ManualData()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Stt
	{
		get
		{
			return this._Stt;
		}
		set
		{
			if ((this._Stt != value))
			{
				this.OnSttChanging(value);
				this.SendPropertyChanging();
				this._Stt = value;
				this.SendPropertyChanged("Stt");
				this.OnSttChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="VarChar(50)")]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this.OnSiteIdChanging(value);
				this.SendPropertyChanging();
				this._SiteId = value;
				this.SendPropertyChanged("SiteId");
				this.OnSiteIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
	public System.Nullable<System.DateTime> TimeStamp
	{
		get
		{
			return this._TimeStamp;
		}
		set
		{
			if ((this._TimeStamp != value))
			{
				this.OnTimeStampChanging(value);
				this.SendPropertyChanging();
				this._TimeStamp = value;
				this.SendPropertyChanged("TimeStamp");
				this.OnTimeStampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Float")]
	public System.Nullable<double> Index
	{
		get
		{
			return this._Index;
		}
		set
		{
			if ((this._Index != value))
			{
				this.OnIndexChanging(value);
				this.SendPropertyChanging();
				this._Index = value;
				this.SendPropertyChanged("Index");
				this.OnIndexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Output", DbType="Float")]
	public System.Nullable<double> Output
	{
		get
		{
			return this._Output;
		}
		set
		{
			if ((this._Output != value))
			{
				this.OnOutputChanging(value);
				this.SendPropertyChanging();
				this._Output = value;
				this.SendPropertyChanged("Output");
				this.OnOutputChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Files")]
public partial class SiteFile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _SiteId;
	
	private string _FileName;
	
	private string _MIMEType;
	
	private System.Nullable<int> _Size;
	
	private string _Path;
	
	private System.Nullable<System.DateTime> _UploadDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSiteIdChanging(string value);
    partial void OnSiteIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnMIMETypeChanging(string value);
    partial void OnMIMETypeChanged();
    partial void OnSizeChanging(System.Nullable<int> value);
    partial void OnSizeChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadDateChanged();
    #endregion
	
	public SiteFile()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this.OnSiteIdChanging(value);
				this.SendPropertyChanging();
				this._SiteId = value;
				this.SendPropertyChanged("SiteId");
				this.OnSiteIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
	public string FileName
	{
		get
		{
			return this._FileName;
		}
		set
		{
			if ((this._FileName != value))
			{
				this.OnFileNameChanging(value);
				this.SendPropertyChanging();
				this._FileName = value;
				this.SendPropertyChanged("FileName");
				this.OnFileNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIMEType", DbType="VarChar(4000)")]
	public string MIMEType
	{
		get
		{
			return this._MIMEType;
		}
		set
		{
			if ((this._MIMEType != value))
			{
				this.OnMIMETypeChanging(value);
				this.SendPropertyChanging();
				this._MIMEType = value;
				this.SendPropertyChanged("MIMEType");
				this.OnMIMETypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int")]
	public System.Nullable<int> Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
	public string Path
	{
		get
		{
			return this._Path;
		}
		set
		{
			if ((this._Path != value))
			{
				this.OnPathChanging(value);
				this.SendPropertyChanging();
				this._Path = value;
				this.SendPropertyChanged("Path");
				this.OnPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UploadDate
	{
		get
		{
			return this._UploadDate;
		}
		set
		{
			if ((this._UploadDate != value))
			{
				this.OnUploadDateChanging(value);
				this.SendPropertyChanging();
				this._UploadDate = value;
				this.SendPropertyChanged("UploadDate");
				this.OnUploadDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_History_Sites")]
public partial class SiteHistory
{
	
	private string _SiteId;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<bool> _Meter;
	
	private string _SerialMeter;
	
	private System.Nullable<bool> _Transmitter;
	
	private string _SerialTransmitter;
	
	private System.Nullable<bool> _Logger;
	
	private string _SeriLogger;
	
	private System.Nullable<bool> _Battery;
	
	private System.Nullable<bool> _TransmitterBattery;
	
	private System.Nullable<bool> _LoggerBattery;
	
	private string _Description;
	
	private System.Nullable<double> _Index;
	
	public SiteHistory()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this._SiteId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this._Date = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meter", DbType="Bit")]
	public System.Nullable<bool> Meter
	{
		get
		{
			return this._Meter;
		}
		set
		{
			if ((this._Meter != value))
			{
				this._Meter = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialMeter", DbType="VarChar(50)")]
	public string SerialMeter
	{
		get
		{
			return this._SerialMeter;
		}
		set
		{
			if ((this._SerialMeter != value))
			{
				this._SerialMeter = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transmitter", DbType="Bit")]
	public System.Nullable<bool> Transmitter
	{
		get
		{
			return this._Transmitter;
		}
		set
		{
			if ((this._Transmitter != value))
			{
				this._Transmitter = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialTransmitter", DbType="VarChar(50)")]
	public string SerialTransmitter
	{
		get
		{
			return this._SerialTransmitter;
		}
		set
		{
			if ((this._SerialTransmitter != value))
			{
				this._SerialTransmitter = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logger", DbType="Bit")]
	public System.Nullable<bool> Logger
	{
		get
		{
			return this._Logger;
		}
		set
		{
			if ((this._Logger != value))
			{
				this._Logger = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriLogger", DbType="VarChar(50)")]
	public string SeriLogger
	{
		get
		{
			return this._SeriLogger;
		}
		set
		{
			if ((this._SeriLogger != value))
			{
				this._SeriLogger = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Battery", DbType="Bit")]
	public System.Nullable<bool> Battery
	{
		get
		{
			return this._Battery;
		}
		set
		{
			if ((this._Battery != value))
			{
				this._Battery = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransmitterBattery", DbType="Bit")]
	public System.Nullable<bool> TransmitterBattery
	{
		get
		{
			return this._TransmitterBattery;
		}
		set
		{
			if ((this._TransmitterBattery != value))
			{
				this._TransmitterBattery = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggerBattery", DbType="Bit")]
	public System.Nullable<bool> LoggerBattery
	{
		get
		{
			return this._LoggerBattery;
		}
		set
		{
			if ((this._LoggerBattery != value))
			{
				this._LoggerBattery = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Float")]
	public System.Nullable<double> Index
	{
		get
		{
			return this._Index;
		}
		set
		{
			if ((this._Index != value))
			{
				this._Index = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_User_Roles")]
public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Role;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public UserRole()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Role
	{
		get
		{
			return this._Role;
		}
		set
		{
			if ((this._Role != value))
			{
				this.OnRoleChanging(value);
				this.SendPropertyChanging();
				this._Role = value;
				this.SendPropertyChanged("Role");
				this.OnRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Devices_Units")]
public partial class ChannelUnit : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Unit;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public ChannelUnit()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Unit
	{
		get
		{
			return this._Unit;
		}
		set
		{
			if ((this._Unit != value))
			{
				this.OnUnitChanging(value);
				this.SendPropertyChanging();
				this._Unit = value;
				this.SendPropertyChanged("Unit");
				this.OnUnitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Devices_SitesConfigs")]
public partial class SiteConfig : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Id;
	
	private string _SiteId;
	
	private string _Tel;
	
	private System.Nullable<byte> _Pressure;
	
	private System.Nullable<byte> _Pressure1;
	
	private System.Nullable<byte> _Forward;
	
	private System.Nullable<byte> _Reverse;
	
	private System.Nullable<short> _Interval;
	
	private System.Nullable<System.DateTime> _BeginTime;
	
	private System.Nullable<byte> _ZoomInit;
	
	private System.Nullable<byte> _ZoomOn;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnSiteIdChanging(string value);
    partial void OnSiteIdChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnPressureChanging(System.Nullable<byte> value);
    partial void OnPressureChanged();
    partial void OnPressure1Changing(System.Nullable<byte> value);
    partial void OnPressure1Changed();
    partial void OnForwardChanging(System.Nullable<byte> value);
    partial void OnForwardChanged();
    partial void OnReverseChanging(System.Nullable<byte> value);
    partial void OnReverseChanged();
    partial void OnIntervalChanging(System.Nullable<short> value);
    partial void OnIntervalChanged();
    partial void OnBeginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginTimeChanged();
    partial void OnZoomInitChanging(System.Nullable<byte> value);
    partial void OnZoomInitChanged();
    partial void OnZoomOnChanging(System.Nullable<byte> value);
    partial void OnZoomOnChanged();
    #endregion
	
	public SiteConfig()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this.OnSiteIdChanging(value);
				this.SendPropertyChanging();
				this._SiteId = value;
				this.SendPropertyChanged("SiteId");
				this.OnSiteIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(50)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pressure", DbType="TinyInt")]
	public System.Nullable<byte> Pressure
	{
		get
		{
			return this._Pressure;
		}
		set
		{
			if ((this._Pressure != value))
			{
				this.OnPressureChanging(value);
				this.SendPropertyChanging();
				this._Pressure = value;
				this.SendPropertyChanged("Pressure");
				this.OnPressureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pressure1", DbType="TinyInt")]
	public System.Nullable<byte> Pressure1
	{
		get
		{
			return this._Pressure1;
		}
		set
		{
			if ((this._Pressure1 != value))
			{
				this.OnPressure1Changing(value);
				this.SendPropertyChanging();
				this._Pressure1 = value;
				this.SendPropertyChanged("Pressure1");
				this.OnPressure1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forward", DbType="TinyInt")]
	public System.Nullable<byte> Forward
	{
		get
		{
			return this._Forward;
		}
		set
		{
			if ((this._Forward != value))
			{
				this.OnForwardChanging(value);
				this.SendPropertyChanging();
				this._Forward = value;
				this.SendPropertyChanged("Forward");
				this.OnForwardChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reverse", DbType="TinyInt")]
	public System.Nullable<byte> Reverse
	{
		get
		{
			return this._Reverse;
		}
		set
		{
			if ((this._Reverse != value))
			{
				this.OnReverseChanging(value);
				this.SendPropertyChanging();
				this._Reverse = value;
				this.SendPropertyChanged("Reverse");
				this.OnReverseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interval", DbType="SmallInt")]
	public System.Nullable<short> Interval
	{
		get
		{
			return this._Interval;
		}
		set
		{
			if ((this._Interval != value))
			{
				this.OnIntervalChanging(value);
				this.SendPropertyChanging();
				this._Interval = value;
				this.SendPropertyChanged("Interval");
				this.OnIntervalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> BeginTime
	{
		get
		{
			return this._BeginTime;
		}
		set
		{
			if ((this._BeginTime != value))
			{
				this.OnBeginTimeChanging(value);
				this.SendPropertyChanging();
				this._BeginTime = value;
				this.SendPropertyChanged("BeginTime");
				this.OnBeginTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoomInit", DbType="TinyInt")]
	public System.Nullable<byte> ZoomInit
	{
		get
		{
			return this._ZoomInit;
		}
		set
		{
			if ((this._ZoomInit != value))
			{
				this.OnZoomInitChanging(value);
				this.SendPropertyChanging();
				this._ZoomInit = value;
				this.SendPropertyChanged("ZoomInit");
				this.OnZoomInitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoomOn", DbType="TinyInt")]
	public System.Nullable<byte> ZoomOn
	{
		get
		{
			return this._ZoomOn;
		}
		set
		{
			if ((this._ZoomOn != value))
			{
				this.OnZoomOnChanging(value);
				this.SendPropertyChanging();
				this._ZoomOn = value;
				this.SendPropertyChanged("ZoomOn");
				this.OnZoomOnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Devices_ChannelsConfigs")]
public partial class ChannelConfig : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Id;
	
	private string _LoggerId;
	
	private string _Name;
	
	private string _Unit;
	
	private System.Nullable<System.DateTime> _LastTimeStamp;
	
	private System.Nullable<double> _LastValue;
	
	private string _Description;

	private Nullable<bool> _Pressure1;
	private Nullable<bool> _Pressure2;
	private Nullable<bool> _ForwardFlow;
	private Nullable<bool> _ReverseFlow;

	#region Extensibility Method Definitions
	partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnLoggerIdChanging(string value);
    partial void OnLoggerIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnLastTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTimeStampChanged();
    partial void OnLastValueChanging(System.Nullable<double> value);
    partial void OnLastValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();

	partial void OnPressure1Changing(Nullable<bool> value);
	partial void OnPressure1Changed();

	partial void OnPressure2Changing(Nullable<bool> value);
	partial void OnPressure2Changed();

	partial void OnForwardFlowChanging(Nullable<bool> value);
	partial void OnForwardFlowChanged();

	partial void OnReverseFlowChanging(Nullable<bool> value);
	partial void OnReverseFlowChanged();
	#endregion

	public ChannelConfig()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggerId", DbType="VarChar(50)")]
	public string LoggerId
	{
		get
		{
			return this._LoggerId;
		}
		set
		{
			if ((this._LoggerId != value))
			{
				this.OnLoggerIdChanging(value);
				this.SendPropertyChanging();
				this._LoggerId = value;
				this.SendPropertyChanged("LoggerId");
				this.OnLoggerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50)")]
	public string Unit
	{
		get
		{
			return this._Unit;
		}
		set
		{
			if ((this._Unit != value))
			{
				this.OnUnitChanging(value);
				this.SendPropertyChanging();
				this._Unit = value;
				this.SendPropertyChanged("Unit");
				this.OnUnitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTimeStamp", DbType="DateTime")]
	public System.Nullable<System.DateTime> LastTimeStamp
	{
		get
		{
			return this._LastTimeStamp;
		}
		set
		{
			if ((this._LastTimeStamp != value))
			{
				this.OnLastTimeStampChanging(value);
				this.SendPropertyChanging();
				this._LastTimeStamp = value;
				this.SendPropertyChanged("LastTimeStamp");
				this.OnLastTimeStampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastValue", DbType="Float")]
	public System.Nullable<double> LastValue
	{
		get
		{
			return this._LastValue;
		}
		set
		{
			if ((this._LastValue != value))
			{
				this.OnLastValueChanging(value);
				this.SendPropertyChanging();
				this._LastValue = value;
				this.SendPropertyChanged("LastValue");
				this.OnLastValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pressure1", DbType = "Bit")]
	public Nullable<bool> Pressure1
	{
		get
		{
			return this._Pressure1;
		}
		set
		{
			if ((this._Pressure1 != value))
			{
				this.OnPressure1Changing(value);
				this.SendPropertyChanging();
				this._Pressure1 = value;
				this.SendPropertyChanged("Pressure1");
				this.OnPressure1Changed();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pressure2", DbType = "Bit")]
	public Nullable<bool> Pressure2
	{
		get
		{
			return this._Pressure2;
		}
		set
		{
			if ((this._Pressure2 != value))
			{
				this.OnPressure2Changing(value);
				this.SendPropertyChanging();
				this._Pressure2 = value;
				this.SendPropertyChanged("Pressure2");
				this.OnPressure2Changed();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ForwardFlow", DbType = "Bit")]
	public Nullable<bool> ForwardFlow
	{
		get
		{
			return this._ForwardFlow;
		}
		set
		{
			if ((this._ForwardFlow != value))
			{
				this.OnForwardFlowChanging(value);
				this.SendPropertyChanging();
				this._ForwardFlow = value;
				this.SendPropertyChanged("ForwardFlow");
				this.OnForwardFlowChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReverseFlow", DbType = "Bit")]
	public Nullable<bool> ReverseFlow
	{
		get
		{
			return this._ReverseFlow;
		}
		set
		{
			if ((this._ReverseFlow != value))
			{
				this.OnReverseFlowChanging(value);
				this.SendPropertyChanging();
				this._ReverseFlow = value;
				this.SendPropertyChanged("ReverseFlow");
				this.OnReverseFlowChanged();
			}
		}
	}

	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Devices_Meters")]
public partial class Meter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Serial;
	
	private System.Nullable<System.DateTime> _ReceiptDate;
	
	private System.Nullable<System.DateTime> _AccreditedDate;
	
	private System.Nullable<System.DateTime> _ExpiryDate;
	
	private string _AccreditationDocument;
	
	private string _AccreditationType;
	
	private string _Provider;
	
	private string _Marks;
	
	private System.Nullable<short> _Size;
	
	private string _Model;
	
	private string _Status;
	
	private System.Nullable<bool> _Installed;
	
	private System.Nullable<double> _InitialIndex;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _ApprovalDate;
	
	private System.Nullable<bool> _Approved;
	
	private string _ApprovalDecision;
	
	private string _SerialTransmitter;
	
	private string _Nationality;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptDateChanged();
    partial void OnAccreditedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccreditedDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnAccreditationDocumentChanging(string value);
    partial void OnAccreditationDocumentChanged();
    partial void OnAccreditationTypeChanging(string value);
    partial void OnAccreditationTypeChanged();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnMarksChanging(string value);
    partial void OnMarksChanged();
    partial void OnSizeChanging(System.Nullable<short> value);
    partial void OnSizeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnInstalledChanging(System.Nullable<bool> value);
    partial void OnInstalledChanged();
    partial void OnInitialIndexChanging(System.Nullable<double> value);
    partial void OnInitialIndexChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    partial void OnApprovalDecisionChanging(string value);
    partial void OnApprovalDecisionChanged();
    partial void OnSerialTransmitterChanging(string value);
    partial void OnSerialTransmitterChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    #endregion
	
	public Meter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Serial
	{
		get
		{
			return this._Serial;
		}
		set
		{
			if ((this._Serial != value))
			{
				this.OnSerialChanging(value);
				this.SendPropertyChanging();
				this._Serial = value;
				this.SendPropertyChanged("Serial");
				this.OnSerialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ReceiptDate
	{
		get
		{
			return this._ReceiptDate;
		}
		set
		{
			if ((this._ReceiptDate != value))
			{
				this.OnReceiptDateChanging(value);
				this.SendPropertyChanging();
				this._ReceiptDate = value;
				this.SendPropertyChanged("ReceiptDate");
				this.OnReceiptDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> AccreditedDate
	{
		get
		{
			return this._AccreditedDate;
		}
		set
		{
			if ((this._AccreditedDate != value))
			{
				this.OnAccreditedDateChanging(value);
				this.SendPropertyChanging();
				this._AccreditedDate = value;
				this.SendPropertyChanged("AccreditedDate");
				this.OnAccreditedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationDocument", DbType="NVarChar(255)")]
	public string AccreditationDocument
	{
		get
		{
			return this._AccreditationDocument;
		}
		set
		{
			if ((this._AccreditationDocument != value))
			{
				this.OnAccreditationDocumentChanging(value);
				this.SendPropertyChanging();
				this._AccreditationDocument = value;
				this.SendPropertyChanged("AccreditationDocument");
				this.OnAccreditationDocumentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationType", DbType="VarChar(5)")]
	public string AccreditationType
	{
		get
		{
			return this._AccreditationType;
		}
		set
		{
			if ((this._AccreditationType != value))
			{
				this.OnAccreditationTypeChanging(value);
				this.SendPropertyChanging();
				this._AccreditationType = value;
				this.SendPropertyChanged("AccreditationType");
				this.OnAccreditationTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="NVarChar(50)")]
	public string Provider
	{
		get
		{
			return this._Provider;
		}
		set
		{
			if ((this._Provider != value))
			{
				this.OnProviderChanging(value);
				this.SendPropertyChanging();
				this._Provider = value;
				this.SendPropertyChanged("Provider");
				this.OnProviderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marks", DbType="NVarChar(50)")]
	public string Marks
	{
		get
		{
			return this._Marks;
		}
		set
		{
			if ((this._Marks != value))
			{
				this.OnMarksChanging(value);
				this.SendPropertyChanging();
				this._Marks = value;
				this.SendPropertyChanged("Marks");
				this.OnMarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="SmallInt")]
	public System.Nullable<short> Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(5)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installed", DbType="Bit")]
	public System.Nullable<bool> Installed
	{
		get
		{
			return this._Installed;
		}
		set
		{
			if ((this._Installed != value))
			{
				this.OnInstalledChanging(value);
				this.SendPropertyChanging();
				this._Installed = value;
				this.SendPropertyChanged("Installed");
				this.OnInstalledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialIndex", DbType="Float")]
	public System.Nullable<double> InitialIndex
	{
		get
		{
			return this._InitialIndex;
		}
		set
		{
			if ((this._InitialIndex != value))
			{
				this.OnInitialIndexChanging(value);
				this.SendPropertyChanging();
				this._InitialIndex = value;
				this.SendPropertyChanged("InitialIndex");
				this.OnInitialIndexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ApprovalDate
	{
		get
		{
			return this._ApprovalDate;
		}
		set
		{
			if ((this._ApprovalDate != value))
			{
				this.OnApprovalDateChanging(value);
				this.SendPropertyChanging();
				this._ApprovalDate = value;
				this.SendPropertyChanged("ApprovalDate");
				this.OnApprovalDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
	public System.Nullable<bool> Approved
	{
		get
		{
			return this._Approved;
		}
		set
		{
			if ((this._Approved != value))
			{
				this.OnApprovedChanging(value);
				this.SendPropertyChanging();
				this._Approved = value;
				this.SendPropertyChanged("Approved");
				this.OnApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDecision", DbType="NVarChar(50)")]
	public string ApprovalDecision
	{
		get
		{
			return this._ApprovalDecision;
		}
		set
		{
			if ((this._ApprovalDecision != value))
			{
				this.OnApprovalDecisionChanging(value);
				this.SendPropertyChanging();
				this._ApprovalDecision = value;
				this.SendPropertyChanged("ApprovalDecision");
				this.OnApprovalDecisionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialTransmitter", DbType="NVarChar(50)")]
	public string SerialTransmitter
	{
		get
		{
			return this._SerialTransmitter;
		}
		set
		{
			if ((this._SerialTransmitter != value))
			{
				this.OnSerialTransmitterChanging(value);
				this.SendPropertyChanging();
				this._SerialTransmitter = value;
				this.SendPropertyChanged("SerialTransmitter");
				this.OnSerialTransmitterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="nvarchar(4000)")]
	public string Nationality
	{
		get
		{
			return this._Nationality;
		}
		set
		{
			if ((this._Nationality != value))
			{
				this.OnNationalityChanging(value);
				this.SendPropertyChanging();
				this._Nationality = value;
				this.SendPropertyChanged("Nationality");
				this.OnNationalityChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_History_Site_Meters")]
public partial class SiteMeterHistory
{
	
	private System.DateTime _DateChanged;
	
	private string _SiteId;
	
	private string _OldMeterSerial;
	
	private string _NewMeterSerial;
	
	private System.Nullable<double> _OldMeterIndex;
	
	private System.Nullable<double> _NewMeterIndex;
	
	private string _Description;
	
	public SiteMeterHistory()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime NOT NULL")]
	public System.DateTime DateChanged
	{
		get
		{
			return this._DateChanged;
		}
		set
		{
			if ((this._DateChanged != value))
			{
				this._DateChanged = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this._SiteId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMeterSerial", DbType="NVarChar(50)")]
	public string OldMeterSerial
	{
		get
		{
			return this._OldMeterSerial;
		}
		set
		{
			if ((this._OldMeterSerial != value))
			{
				this._OldMeterSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMeterSerial", DbType="NVarChar(50)")]
	public string NewMeterSerial
	{
		get
		{
			return this._NewMeterSerial;
		}
		set
		{
			if ((this._NewMeterSerial != value))
			{
				this._NewMeterSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMeterIndex", DbType="Float")]
	public System.Nullable<double> OldMeterIndex
	{
		get
		{
			return this._OldMeterIndex;
		}
		set
		{
			if ((this._OldMeterIndex != value))
			{
				this._OldMeterIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMeterIndex", DbType="Float")]
	public System.Nullable<double> NewMeterIndex
	{
		get
		{
			return this._NewMeterIndex;
		}
		set
		{
			if ((this._NewMeterIndex != value))
			{
				this._NewMeterIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_History_Site_Transmitters")]
public partial class SiteTransmitterHistory
{
	
	private System.DateTime _DateChanged;
	
	private string _SiteId;
	
	private string _OldMeterSerial;
	
	private string _NewMeterSerial;
	
	private System.Nullable<double> _OldMeterIndex;
	
	private System.Nullable<double> _NewMeterIndex;
	
	private string _Description;
	
	public SiteTransmitterHistory()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime NOT NULL")]
	public System.DateTime DateChanged
	{
		get
		{
			return this._DateChanged;
		}
		set
		{
			if ((this._DateChanged != value))
			{
				this._DateChanged = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this._SiteId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMeterSerial", DbType="NVarChar(50)")]
	public string OldMeterSerial
	{
		get
		{
			return this._OldMeterSerial;
		}
		set
		{
			if ((this._OldMeterSerial != value))
			{
				this._OldMeterSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMeterSerial", DbType="NVarChar(50)")]
	public string NewMeterSerial
	{
		get
		{
			return this._NewMeterSerial;
		}
		set
		{
			if ((this._NewMeterSerial != value))
			{
				this._NewMeterSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMeterIndex", DbType="Float")]
	public System.Nullable<double> OldMeterIndex
	{
		get
		{
			return this._OldMeterIndex;
		}
		set
		{
			if ((this._OldMeterIndex != value))
			{
				this._OldMeterIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMeterIndex", DbType="Float")]
	public System.Nullable<double> NewMeterIndex
	{
		get
		{
			return this._NewMeterIndex;
		}
		set
		{
			if ((this._NewMeterIndex != value))
			{
				this._NewMeterIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_History_Site_Loggers")]
public partial class SiteLoggerHistory
{
	
	private System.DateTime _DateChanged;
	
	private string _SiteId;
	
	private string _OldMeterSerial;
	
	private string _NewMeterSerial;
	
	private System.Nullable<double> _OldMeterIndex;
	
	private System.Nullable<double> _NewMeterIndex;
	
	private string _Description;
	
	public SiteLoggerHistory()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime NOT NULL")]
	public System.DateTime DateChanged
	{
		get
		{
			return this._DateChanged;
		}
		set
		{
			if ((this._DateChanged != value))
			{
				this._DateChanged = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this._SiteId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMeterSerial", DbType="NVarChar(50)")]
	public string OldMeterSerial
	{
		get
		{
			return this._OldMeterSerial;
		}
		set
		{
			if ((this._OldMeterSerial != value))
			{
				this._OldMeterSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMeterSerial", DbType="NVarChar(50)")]
	public string NewMeterSerial
	{
		get
		{
			return this._NewMeterSerial;
		}
		set
		{
			if ((this._NewMeterSerial != value))
			{
				this._NewMeterSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMeterIndex", DbType="Float")]
	public System.Nullable<double> OldMeterIndex
	{
		get
		{
			return this._OldMeterIndex;
		}
		set
		{
			if ((this._OldMeterIndex != value))
			{
				this._OldMeterIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewMeterIndex", DbType="Float")]
	public System.Nullable<double> NewMeterIndex
	{
		get
		{
			return this._NewMeterIndex;
		}
		set
		{
			if ((this._NewMeterIndex != value))
			{
				this._NewMeterIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Gis_Sites")]
public partial class GisSite : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Company;
	
	private double _Latitude;
	
	private double _Longitude;
	
	private byte _Zoom;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnZoomChanging(byte value);
    partial void OnZoomChanged();
    #endregion
	
	public GisSite()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
	public double Latitude
	{
		get
		{
			return this._Latitude;
		}
		set
		{
			if ((this._Latitude != value))
			{
				this.OnLatitudeChanging(value);
				this.SendPropertyChanging();
				this._Latitude = value;
				this.SendPropertyChanged("Latitude");
				this.OnLatitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
	public double Longitude
	{
		get
		{
			return this._Longitude;
		}
		set
		{
			if ((this._Longitude != value))
			{
				this.OnLongitudeChanging(value);
				this.SendPropertyChanging();
				this._Longitude = value;
				this.SendPropertyChanged("Longitude");
				this.OnLongitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zoom", DbType="TinyInt NOT NULL")]
	public byte Zoom
	{
		get
		{
			return this._Zoom;
		}
		set
		{
			if ((this._Zoom != value))
			{
				this.OnZoomChanging(value);
				this.SendPropertyChanging();
				this._Zoom = value;
				this.SendPropertyChanged("Zoom");
				this.OnZoomChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class ReportSiteMeterHistory
{
	
	private int _Id;
	
	private System.DateTime _DateChanged;
	
	private string _OSerial;
	
	private string _OProvider;
	
	private string _OMarks;
	
	private short _OSize;
	
	private string _OModel;
	
	private string _OStatus;
	
	private double _OIndex;
	
	private string _OApprovalDecision;
	
	private string _OAccreditationDocument;
	
	private string _NSerial;
	
	private string _NProvider;
	
	private string _NMarks;
	
	private short _NSize;
	
	private string _NModel;
	
	private string _NStatus;
	
	private double _NIndex;
	
	private string _NApprovalDecision;
	
	private string _NAccreditationDocument;
	
	private string _Description;
	
	public ReportSiteMeterHistory()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id")]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this._Id = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged")]
	public System.DateTime DateChanged
	{
		get
		{
			return this._DateChanged;
		}
		set
		{
			if ((this._DateChanged != value))
			{
				this._DateChanged = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSerial", CanBeNull=false)]
	public string OSerial
	{
		get
		{
			return this._OSerial;
		}
		set
		{
			if ((this._OSerial != value))
			{
				this._OSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OProvider", CanBeNull=false)]
	public string OProvider
	{
		get
		{
			return this._OProvider;
		}
		set
		{
			if ((this._OProvider != value))
			{
				this._OProvider = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMarks", CanBeNull=false)]
	public string OMarks
	{
		get
		{
			return this._OMarks;
		}
		set
		{
			if ((this._OMarks != value))
			{
				this._OMarks = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSize")]
	public short OSize
	{
		get
		{
			return this._OSize;
		}
		set
		{
			if ((this._OSize != value))
			{
				this._OSize = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OModel", CanBeNull=false)]
	public string OModel
	{
		get
		{
			return this._OModel;
		}
		set
		{
			if ((this._OModel != value))
			{
				this._OModel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OStatus", CanBeNull=false)]
	public string OStatus
	{
		get
		{
			return this._OStatus;
		}
		set
		{
			if ((this._OStatus != value))
			{
				this._OStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIndex")]
	public double OIndex
	{
		get
		{
			return this._OIndex;
		}
		set
		{
			if ((this._OIndex != value))
			{
				this._OIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OApprovalDecision", CanBeNull=false)]
	public string OApprovalDecision
	{
		get
		{
			return this._OApprovalDecision;
		}
		set
		{
			if ((this._OApprovalDecision != value))
			{
				this._OApprovalDecision = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OAccreditationDocument", CanBeNull=false)]
	public string OAccreditationDocument
	{
		get
		{
			return this._OAccreditationDocument;
		}
		set
		{
			if ((this._OAccreditationDocument != value))
			{
				this._OAccreditationDocument = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSerial", CanBeNull=false)]
	public string NSerial
	{
		get
		{
			return this._NSerial;
		}
		set
		{
			if ((this._NSerial != value))
			{
				this._NSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NProvider", CanBeNull=false)]
	public string NProvider
	{
		get
		{
			return this._NProvider;
		}
		set
		{
			if ((this._NProvider != value))
			{
				this._NProvider = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NMarks", CanBeNull=false)]
	public string NMarks
	{
		get
		{
			return this._NMarks;
		}
		set
		{
			if ((this._NMarks != value))
			{
				this._NMarks = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSize")]
	public short NSize
	{
		get
		{
			return this._NSize;
		}
		set
		{
			if ((this._NSize != value))
			{
				this._NSize = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NModel", CanBeNull=false)]
	public string NModel
	{
		get
		{
			return this._NModel;
		}
		set
		{
			if ((this._NModel != value))
			{
				this._NModel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NStatus", CanBeNull=false)]
	public string NStatus
	{
		get
		{
			return this._NStatus;
		}
		set
		{
			if ((this._NStatus != value))
			{
				this._NStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIndex")]
	public double NIndex
	{
		get
		{
			return this._NIndex;
		}
		set
		{
			if ((this._NIndex != value))
			{
				this._NIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NApprovalDecision", CanBeNull=false)]
	public string NApprovalDecision
	{
		get
		{
			return this._NApprovalDecision;
		}
		set
		{
			if ((this._NApprovalDecision != value))
			{
				this._NApprovalDecision = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAccreditationDocument", CanBeNull=false)]
	public string NAccreditationDocument
	{
		get
		{
			return this._NAccreditationDocument;
		}
		set
		{
			if ((this._NAccreditationDocument != value))
			{
				this._NAccreditationDocument = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class ReportSiteTransmitterHistory
{
	
	private int _Id;
	
	private System.DateTime _DateChanged;
	
	private string _OSerial;
	
	private string _OProvider;
	
	private string _OMarks;
	
	private short _OSize;
	
	private string _OModel;
	
	private string _OStatus;
	
	private double _OIndex;
	
	private string _OApprovalDecision;
	
	private string _NSerial;
	
	private string _NProvider;
	
	private string _NMarks;
	
	private short _NSize;
	
	private string _NModel;
	
	private string _NStatus;
	
	private double _NIndex;
	
	private string _NApprovalDecision;
	
	private string _Description;
	
	public ReportSiteTransmitterHistory()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id")]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this._Id = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged")]
	public System.DateTime DateChanged
	{
		get
		{
			return this._DateChanged;
		}
		set
		{
			if ((this._DateChanged != value))
			{
				this._DateChanged = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSerial", CanBeNull=false)]
	public string OSerial
	{
		get
		{
			return this._OSerial;
		}
		set
		{
			if ((this._OSerial != value))
			{
				this._OSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OProvider", CanBeNull=false)]
	public string OProvider
	{
		get
		{
			return this._OProvider;
		}
		set
		{
			if ((this._OProvider != value))
			{
				this._OProvider = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMarks", CanBeNull=false)]
	public string OMarks
	{
		get
		{
			return this._OMarks;
		}
		set
		{
			if ((this._OMarks != value))
			{
				this._OMarks = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSize")]
	public short OSize
	{
		get
		{
			return this._OSize;
		}
		set
		{
			if ((this._OSize != value))
			{
				this._OSize = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OModel", CanBeNull=false)]
	public string OModel
	{
		get
		{
			return this._OModel;
		}
		set
		{
			if ((this._OModel != value))
			{
				this._OModel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OStatus", CanBeNull=false)]
	public string OStatus
	{
		get
		{
			return this._OStatus;
		}
		set
		{
			if ((this._OStatus != value))
			{
				this._OStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIndex")]
	public double OIndex
	{
		get
		{
			return this._OIndex;
		}
		set
		{
			if ((this._OIndex != value))
			{
				this._OIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OApprovalDecision", CanBeNull=false)]
	public string OApprovalDecision
	{
		get
		{
			return this._OApprovalDecision;
		}
		set
		{
			if ((this._OApprovalDecision != value))
			{
				this._OApprovalDecision = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSerial", CanBeNull=false)]
	public string NSerial
	{
		get
		{
			return this._NSerial;
		}
		set
		{
			if ((this._NSerial != value))
			{
				this._NSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NProvider", CanBeNull=false)]
	public string NProvider
	{
		get
		{
			return this._NProvider;
		}
		set
		{
			if ((this._NProvider != value))
			{
				this._NProvider = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NMarks", CanBeNull=false)]
	public string NMarks
	{
		get
		{
			return this._NMarks;
		}
		set
		{
			if ((this._NMarks != value))
			{
				this._NMarks = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSize")]
	public short NSize
	{
		get
		{
			return this._NSize;
		}
		set
		{
			if ((this._NSize != value))
			{
				this._NSize = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NModel", CanBeNull=false)]
	public string NModel
	{
		get
		{
			return this._NModel;
		}
		set
		{
			if ((this._NModel != value))
			{
				this._NModel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NStatus", CanBeNull=false)]
	public string NStatus
	{
		get
		{
			return this._NStatus;
		}
		set
		{
			if ((this._NStatus != value))
			{
				this._NStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIndex")]
	public double NIndex
	{
		get
		{
			return this._NIndex;
		}
		set
		{
			if ((this._NIndex != value))
			{
				this._NIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NApprovalDecision", CanBeNull=false)]
	public string NApprovalDecision
	{
		get
		{
			return this._NApprovalDecision;
		}
		set
		{
			if ((this._NApprovalDecision != value))
			{
				this._NApprovalDecision = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class ReportSiteLoggerHistory
{
	
	private int _Id;
	
	private System.DateTime _DateChanged;
	
	private string _OSerial;
	
	private string _OProvider;
	
	private string _OMarks;
	
	private string _OModel;
	
	private string _OStatus;
	
	private double _OIndex;
	
	private string _NSerial;
	
	private string _NProvider;
	
	private string _NMarks;
	
	private string _NModel;
	
	private string _NStatus;
	
	private double _NIndex;
	
	private string _Description;
	
	public ReportSiteLoggerHistory()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id")]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this._Id = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged")]
	public System.DateTime DateChanged
	{
		get
		{
			return this._DateChanged;
		}
		set
		{
			if ((this._DateChanged != value))
			{
				this._DateChanged = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSerial", CanBeNull=false)]
	public string OSerial
	{
		get
		{
			return this._OSerial;
		}
		set
		{
			if ((this._OSerial != value))
			{
				this._OSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OProvider", CanBeNull=false)]
	public string OProvider
	{
		get
		{
			return this._OProvider;
		}
		set
		{
			if ((this._OProvider != value))
			{
				this._OProvider = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMarks", CanBeNull=false)]
	public string OMarks
	{
		get
		{
			return this._OMarks;
		}
		set
		{
			if ((this._OMarks != value))
			{
				this._OMarks = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OModel", CanBeNull=false)]
	public string OModel
	{
		get
		{
			return this._OModel;
		}
		set
		{
			if ((this._OModel != value))
			{
				this._OModel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OStatus", CanBeNull=false)]
	public string OStatus
	{
		get
		{
			return this._OStatus;
		}
		set
		{
			if ((this._OStatus != value))
			{
				this._OStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIndex")]
	public double OIndex
	{
		get
		{
			return this._OIndex;
		}
		set
		{
			if ((this._OIndex != value))
			{
				this._OIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSerial", CanBeNull=false)]
	public string NSerial
	{
		get
		{
			return this._NSerial;
		}
		set
		{
			if ((this._NSerial != value))
			{
				this._NSerial = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NProvider", CanBeNull=false)]
	public string NProvider
	{
		get
		{
			return this._NProvider;
		}
		set
		{
			if ((this._NProvider != value))
			{
				this._NProvider = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NMarks", CanBeNull=false)]
	public string NMarks
	{
		get
		{
			return this._NMarks;
		}
		set
		{
			if ((this._NMarks != value))
			{
				this._NMarks = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NModel", CanBeNull=false)]
	public string NModel
	{
		get
		{
			return this._NModel;
		}
		set
		{
			if ((this._NModel != value))
			{
				this._NModel = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NStatus", CanBeNull=false)]
	public string NStatus
	{
		get
		{
			return this._NStatus;
		}
		set
		{
			if ((this._NStatus != value))
			{
				this._NStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIndex")]
	public double NIndex
	{
		get
		{
			return this._NIndex;
		}
		set
		{
			if ((this._NIndex != value))
			{
				this._NIndex = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Group2s")]
public partial class SiteGroup2 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Group;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteGroup2()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Group
	{
		get
		{
			return this._Group;
		}
		set
		{
			if ((this._Group != value))
			{
				this.OnGroupChanging(value);
				this.SendPropertyChanging();
				this._Group = value;
				this.SendPropertyChanged("Group");
				this.OnGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class ChartData
{
	
	private System.DateTime _TimeStamp;
	
	private double _Value;
	
	public ChartData()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp")]
	public System.DateTime TimeStamp
	{
		get
		{
			return this._TimeStamp;
		}
		set
		{
			if ((this._TimeStamp != value))
			{
				this._TimeStamp = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value")]
	public double Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this._Value = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Devices_Transmitters")]
public partial class Transmitter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Serial;
	
	private System.Nullable<System.DateTime> _ReceiptDate;
	
	private string _Provider;
	
	private string _Marks;
	
	private System.Nullable<short> _Size;
	
	private string _Model;
	
	private string _Status;
	
	private System.Nullable<bool> _Installed;
	
	private System.Nullable<double> _InitialIndex;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _ApprovalDate;
	
	private System.Nullable<bool> _Approved;
	
	private string _ApprovalDecision;
	
	private System.Nullable<System.DateTime> _AccreditedDate;
	
	private System.Nullable<System.DateTime> _ExpiryDate;
	
	private string _AccreditationDocument;
	
	private string _AccreditationType;
	
	private string _MeterSerial;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptDateChanged();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnMarksChanging(string value);
    partial void OnMarksChanged();
    partial void OnSizeChanging(System.Nullable<short> value);
    partial void OnSizeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnInstalledChanging(System.Nullable<bool> value);
    partial void OnInstalledChanged();
    partial void OnInitialIndexChanging(System.Nullable<double> value);
    partial void OnInitialIndexChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    partial void OnApprovalDecisionChanging(string value);
    partial void OnApprovalDecisionChanged();
    partial void OnAccreditedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccreditedDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnAccreditationDocumentChanging(string value);
    partial void OnAccreditationDocumentChanged();
    partial void OnAccreditationTypeChanging(string value);
    partial void OnAccreditationTypeChanged();
    partial void OnMeterSerialChanging(string value);
    partial void OnMeterSerialChanged();
    #endregion
	
	public Transmitter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Serial
	{
		get
		{
			return this._Serial;
		}
		set
		{
			if ((this._Serial != value))
			{
				this.OnSerialChanging(value);
				this.SendPropertyChanging();
				this._Serial = value;
				this.SendPropertyChanged("Serial");
				this.OnSerialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ReceiptDate
	{
		get
		{
			return this._ReceiptDate;
		}
		set
		{
			if ((this._ReceiptDate != value))
			{
				this.OnReceiptDateChanging(value);
				this.SendPropertyChanging();
				this._ReceiptDate = value;
				this.SendPropertyChanged("ReceiptDate");
				this.OnReceiptDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="NVarChar(50)")]
	public string Provider
	{
		get
		{
			return this._Provider;
		}
		set
		{
			if ((this._Provider != value))
			{
				this.OnProviderChanging(value);
				this.SendPropertyChanging();
				this._Provider = value;
				this.SendPropertyChanged("Provider");
				this.OnProviderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marks", DbType="NVarChar(50)")]
	public string Marks
	{
		get
		{
			return this._Marks;
		}
		set
		{
			if ((this._Marks != value))
			{
				this.OnMarksChanging(value);
				this.SendPropertyChanging();
				this._Marks = value;
				this.SendPropertyChanged("Marks");
				this.OnMarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="SmallInt")]
	public System.Nullable<short> Size
	{
		get
		{
			return this._Size;
		}
		set
		{
			if ((this._Size != value))
			{
				this.OnSizeChanging(value);
				this.SendPropertyChanging();
				this._Size = value;
				this.SendPropertyChanged("Size");
				this.OnSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(5)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installed", DbType="Bit")]
	public System.Nullable<bool> Installed
	{
		get
		{
			return this._Installed;
		}
		set
		{
			if ((this._Installed != value))
			{
				this.OnInstalledChanging(value);
				this.SendPropertyChanging();
				this._Installed = value;
				this.SendPropertyChanged("Installed");
				this.OnInstalledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialIndex", DbType="Float")]
	public System.Nullable<double> InitialIndex
	{
		get
		{
			return this._InitialIndex;
		}
		set
		{
			if ((this._InitialIndex != value))
			{
				this.OnInitialIndexChanging(value);
				this.SendPropertyChanging();
				this._InitialIndex = value;
				this.SendPropertyChanged("InitialIndex");
				this.OnInitialIndexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ApprovalDate
	{
		get
		{
			return this._ApprovalDate;
		}
		set
		{
			if ((this._ApprovalDate != value))
			{
				this.OnApprovalDateChanging(value);
				this.SendPropertyChanging();
				this._ApprovalDate = value;
				this.SendPropertyChanged("ApprovalDate");
				this.OnApprovalDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
	public System.Nullable<bool> Approved
	{
		get
		{
			return this._Approved;
		}
		set
		{
			if ((this._Approved != value))
			{
				this.OnApprovedChanging(value);
				this.SendPropertyChanging();
				this._Approved = value;
				this.SendPropertyChanged("Approved");
				this.OnApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDecision", DbType="NVarChar(50)")]
	public string ApprovalDecision
	{
		get
		{
			return this._ApprovalDecision;
		}
		set
		{
			if ((this._ApprovalDecision != value))
			{
				this.OnApprovalDecisionChanging(value);
				this.SendPropertyChanging();
				this._ApprovalDecision = value;
				this.SendPropertyChanged("ApprovalDecision");
				this.OnApprovalDecisionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> AccreditedDate
	{
		get
		{
			return this._AccreditedDate;
		}
		set
		{
			if ((this._AccreditedDate != value))
			{
				this.OnAccreditedDateChanging(value);
				this.SendPropertyChanging();
				this._AccreditedDate = value;
				this.SendPropertyChanged("AccreditedDate");
				this.OnAccreditedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationDocument", DbType="NVarChar(255)")]
	public string AccreditationDocument
	{
		get
		{
			return this._AccreditationDocument;
		}
		set
		{
			if ((this._AccreditationDocument != value))
			{
				this.OnAccreditationDocumentChanging(value);
				this.SendPropertyChanging();
				this._AccreditationDocument = value;
				this.SendPropertyChanged("AccreditationDocument");
				this.OnAccreditationDocumentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationType", DbType="VarChar(5)")]
	public string AccreditationType
	{
		get
		{
			return this._AccreditationType;
		}
		set
		{
			if ((this._AccreditationType != value))
			{
				this.OnAccreditationTypeChanging(value);
				this.SendPropertyChanging();
				this._AccreditationType = value;
				this.SendPropertyChanged("AccreditationType");
				this.OnAccreditationTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeterSerial", DbType="VarChar(50)")]
	public string MeterSerial
	{
		get
		{
			return this._MeterSerial;
		}
		set
		{
			if ((this._MeterSerial != value))
			{
				this.OnMeterSerialChanging(value);
				this.SendPropertyChanging();
				this._MeterSerial = value;
				this.SendPropertyChanged("MeterSerial");
				this.OnMeterSerialChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_User_Users")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Uid;
	
	private string _StaffId;
	
	private string _Pwd;
	
	private string _Salt;
	
	private string _Role;
	
	private System.Nullable<bool> _Active;
	
	private System.Nullable<System.DateTime> _TimeStamp;
	
	private string _Ip;
	
	private System.Nullable<int> _LogCount;
	
	private System.Nullable<byte> _Zoom;
	
	private string _Company;
	
	private string _Language;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(string value);
    partial void OnUidChanged();
    partial void OnStaffIdChanging(string value);
    partial void OnStaffIdChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnLogCountChanging(System.Nullable<int> value);
    partial void OnLogCountChanged();
    partial void OnZoomChanging(System.Nullable<byte> value);
    partial void OnZoomChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    #endregion
	
	public User()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Uid
	{
		get
		{
			return this._Uid;
		}
		set
		{
			if ((this._Uid != value))
			{
				this.OnUidChanging(value);
				this.SendPropertyChanging();
				this._Uid = value;
				this.SendPropertyChanged("Uid");
				this.OnUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="VarChar(5)")]
	public string StaffId
	{
		get
		{
			return this._StaffId;
		}
		set
		{
			if ((this._StaffId != value))
			{
				this.OnStaffIdChanging(value);
				this.SendPropertyChanging();
				this._StaffId = value;
				this.SendPropertyChanged("StaffId");
				this.OnStaffIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(50)")]
	public string Pwd
	{
		get
		{
			return this._Pwd;
		}
		set
		{
			if ((this._Pwd != value))
			{
				this.OnPwdChanging(value);
				this.SendPropertyChanging();
				this._Pwd = value;
				this.SendPropertyChanged("Pwd");
				this.OnPwdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="NVarChar(50)")]
	public string Salt
	{
		get
		{
			return this._Salt;
		}
		set
		{
			if ((this._Salt != value))
			{
				this.OnSaltChanging(value);
				this.SendPropertyChanging();
				this._Salt = value;
				this.SendPropertyChanged("Salt");
				this.OnSaltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50)")]
	public string Role
	{
		get
		{
			return this._Role;
		}
		set
		{
			if ((this._Role != value))
			{
				this.OnRoleChanging(value);
				this.SendPropertyChanging();
				this._Role = value;
				this.SendPropertyChanged("Role");
				this.OnRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
	public System.Nullable<bool> Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
	public System.Nullable<System.DateTime> TimeStamp
	{
		get
		{
			return this._TimeStamp;
		}
		set
		{
			if ((this._TimeStamp != value))
			{
				this.OnTimeStampChanging(value);
				this.SendPropertyChanging();
				this._TimeStamp = value;
				this.SendPropertyChanged("TimeStamp");
				this.OnTimeStampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50)")]
	public string Ip
	{
		get
		{
			return this._Ip;
		}
		set
		{
			if ((this._Ip != value))
			{
				this.OnIpChanging(value);
				this.SendPropertyChanging();
				this._Ip = value;
				this.SendPropertyChanged("Ip");
				this.OnIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCount", DbType="Int")]
	public System.Nullable<int> LogCount
	{
		get
		{
			return this._LogCount;
		}
		set
		{
			if ((this._LogCount != value))
			{
				this.OnLogCountChanging(value);
				this.SendPropertyChanging();
				this._LogCount = value;
				this.SendPropertyChanged("LogCount");
				this.OnLogCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zoom", DbType="TinyInt")]
	public System.Nullable<byte> Zoom
	{
		get
		{
			return this._Zoom;
		}
		set
		{
			if ((this._Zoom != value))
			{
				this.OnZoomChanging(value);
				this.SendPropertyChanging();
				this._Zoom = value;
				this.SendPropertyChanged("Zoom");
				this.OnZoomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50)")]
	public string Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="VarChar(50)")]
	public string Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Covers")]
public partial class Cover : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CoverID;
	
	private System.Nullable<int> _CoverL;
	
	private System.Nullable<int> _CoverW;
	
	private System.Nullable<int> _CoverH;
	
	private string _CoverMaterial;
	
	private System.Nullable<int> _CoverNL;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCoverIDChanging(string value);
    partial void OnCoverIDChanged();
    partial void OnCoverLChanging(System.Nullable<int> value);
    partial void OnCoverLChanged();
    partial void OnCoverWChanging(System.Nullable<int> value);
    partial void OnCoverWChanged();
    partial void OnCoverHChanging(System.Nullable<int> value);
    partial void OnCoverHChanged();
    partial void OnCoverMaterialChanging(string value);
    partial void OnCoverMaterialChanged();
    partial void OnCoverNLChanging(System.Nullable<int> value);
    partial void OnCoverNLChanged();
    #endregion
	
	public Cover()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CoverID
	{
		get
		{
			return this._CoverID;
		}
		set
		{
			if ((this._CoverID != value))
			{
				this.OnCoverIDChanging(value);
				this.SendPropertyChanging();
				this._CoverID = value;
				this.SendPropertyChanged("CoverID");
				this.OnCoverIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverL", DbType="Int")]
	public System.Nullable<int> CoverL
	{
		get
		{
			return this._CoverL;
		}
		set
		{
			if ((this._CoverL != value))
			{
				this.OnCoverLChanging(value);
				this.SendPropertyChanging();
				this._CoverL = value;
				this.SendPropertyChanged("CoverL");
				this.OnCoverLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverW", DbType="Int")]
	public System.Nullable<int> CoverW
	{
		get
		{
			return this._CoverW;
		}
		set
		{
			if ((this._CoverW != value))
			{
				this.OnCoverWChanging(value);
				this.SendPropertyChanging();
				this._CoverW = value;
				this.SendPropertyChanged("CoverW");
				this.OnCoverWChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverH", DbType="Int")]
	public System.Nullable<int> CoverH
	{
		get
		{
			return this._CoverH;
		}
		set
		{
			if ((this._CoverH != value))
			{
				this.OnCoverHChanging(value);
				this.SendPropertyChanging();
				this._CoverH = value;
				this.SendPropertyChanged("CoverH");
				this.OnCoverHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverMaterial", DbType="NVarChar(50)")]
	public string CoverMaterial
	{
		get
		{
			return this._CoverMaterial;
		}
		set
		{
			if ((this._CoverMaterial != value))
			{
				this.OnCoverMaterialChanging(value);
				this.SendPropertyChanging();
				this._CoverMaterial = value;
				this.SendPropertyChanged("CoverMaterial");
				this.OnCoverMaterialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverNL", DbType="Int")]
	public System.Nullable<int> CoverNL
	{
		get
		{
			return this._CoverNL;
		}
		set
		{
			if ((this._CoverNL != value))
			{
				this.OnCoverNLChanging(value);
				this.SendPropertyChanging();
				this._CoverNL = value;
				this.SendPropertyChanged("CoverNL");
				this.OnCoverNLChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Group3s")]
public partial class SiteGroup3 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Group;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteGroup3()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Group
	{
		get
		{
			return this._Group;
		}
		set
		{
			if ((this._Group != value))
			{
				this.OnGroupChanging(value);
				this.SendPropertyChanging();
				this._Group = value;
				this.SendPropertyChanged("Group");
				this.OnGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Group4s")]
public partial class SiteGroup4 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Group;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteGroup4()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Group
	{
		get
		{
			return this._Group;
		}
		set
		{
			if ((this._Group != value))
			{
				this.OnGroupChanging(value);
				this.SendPropertyChanging();
				this._Group = value;
				this.SendPropertyChanged("Group");
				this.OnGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Group5s")]
public partial class SiteGroup5 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Group;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public SiteGroup5()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Group
	{
		get
		{
			return this._Group;
		}
		set
		{
			if ((this._Group != value))
			{
				this.OnGroupChanging(value);
				this.SendPropertyChanging();
				this._Group = value;
				this.SendPropertyChanged("Group");
				this.OnGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Site_Sites")]
public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Id;
	
	private string _OldId;
	
	private string _Location;
	
	private System.Nullable<double> _Longitude;
	
	private System.Nullable<double> _Latitude;
	
	private string _ViewGroup;
	
	private string _StaffId;
	
	private string _Meter;
	
	private string _Transmitter;
	
	private string _Logger;
	
	private System.Nullable<System.DateTime> _DateOfMeterChange;
	
	private System.Nullable<System.DateTime> _DateOfLoggerChange;
	
	private System.Nullable<System.DateTime> _DateOfTransmitterChange;
	
	private System.Nullable<System.DateTime> _DateOfBatteryChange;
	
	private System.Nullable<System.DateTime> _DateOfTransmitterBatteryChange;
	
	private System.Nullable<System.DateTime> _DateOfLoggerBatteryChange;
	
	private string _DescriptionOfChange;
	
	private System.Nullable<double> _ChangeIndex;
	
	private string _Level;
	
	private string _Group;
	
	private string _Company;
	
	private System.Nullable<System.DateTime> _TakeoverDate;
	
	private System.Nullable<bool> _Takeovered;
	
	private string _Status;
	
	private string _Availability;
	
	private System.Nullable<bool> _Display;
	
	private System.Nullable<bool> _Property;
	
	private System.Nullable<bool> _UsingLogger;
	
	private string _MeterDirection;
	
	private string _ProductionCompany;
	
	private string _IstDistributionCompany;
	
	private string _QndDistributionCompany;
	
	private System.Nullable<bool> _IstDoNotCalculateReverse;
	
	private System.Nullable<bool> _QndDoNotCalculateReverse;
	
	private string _Description;
	
	private System.Nullable<double> _ChangeIndex1;
	
	private string _Group2;
	
	private string _Address;
	
	private string _CoverID;
	
	private string _Group3;
	
	private string _Group4;
	
	private string _Group5;
	
	private string _District;

	private string _DMAOut;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnOldIdChanging(string value);
    partial void OnOldIdChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnViewGroupChanging(string value);
    partial void OnViewGroupChanged();
    partial void OnStaffIdChanging(string value);
    partial void OnStaffIdChanged();
    partial void OnMeterChanging(string value);
    partial void OnMeterChanged();
    partial void OnTransmitterChanging(string value);
    partial void OnTransmitterChanged();
    partial void OnLoggerChanging(string value);
    partial void OnLoggerChanged();
    partial void OnDateOfMeterChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfMeterChangeChanged();
    partial void OnDateOfLoggerChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfLoggerChangeChanged();
    partial void OnDateOfTransmitterChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfTransmitterChangeChanged();
    partial void OnDateOfBatteryChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBatteryChangeChanged();
    partial void OnDateOfTransmitterBatteryChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfTransmitterBatteryChangeChanged();
    partial void OnDateOfLoggerBatteryChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfLoggerBatteryChangeChanged();
    partial void OnDescriptionOfChangeChanging(string value);
    partial void OnDescriptionOfChangeChanged();
    partial void OnChangeIndexChanging(System.Nullable<double> value);
    partial void OnChangeIndexChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnTakeoverDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTakeoverDateChanged();
    partial void OnTakeoveredChanging(System.Nullable<bool> value);
    partial void OnTakeoveredChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAvailabilityChanging(string value);
    partial void OnAvailabilityChanged();
    partial void OnDisplayChanging(System.Nullable<bool> value);
    partial void OnDisplayChanged();
    partial void OnPropertyChanging(System.Nullable<bool> value);
    partial void OnPropertyChanged();
    partial void OnUsingLoggerChanging(System.Nullable<bool> value);
    partial void OnUsingLoggerChanged();
    partial void OnMeterDirectionChanging(string value);
    partial void OnMeterDirectionChanged();
    partial void OnProductionCompanyChanging(string value);
    partial void OnProductionCompanyChanged();
    partial void OnIstDistributionCompanyChanging(string value);
    partial void OnIstDistributionCompanyChanged();
    partial void OnQndDistributionCompanyChanging(string value);
    partial void OnQndDistributionCompanyChanged();
    partial void OnIstDoNotCalculateReverseChanging(System.Nullable<bool> value);
    partial void OnIstDoNotCalculateReverseChanged();
    partial void OnQndDoNotCalculateReverseChanging(System.Nullable<bool> value);
    partial void OnQndDoNotCalculateReverseChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnChangeIndex1Changing(System.Nullable<double> value);
    partial void OnChangeIndex1Changed();
    partial void OnGroup2Changing(string value);
    partial void OnGroup2Changed();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCoverIDChanging(string value);
    partial void OnCoverIDChanged();
    partial void OnGroup3Changing(string value);
    partial void OnGroup3Changed();
    partial void OnGroup4Changing(string value);
    partial void OnGroup4Changed();
    partial void OnGroup5Changing(string value);
    partial void OnGroup5Changed();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();

	partial void OnDMAOutChanging(string value);
	partial void OnDMAOutChanged();
	#endregion

	public Site()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="VarChar(50)")]
	public string OldId
	{
		get
		{
			return this._OldId;
		}
		set
		{
			if ((this._OldId != value))
			{
				this.OnOldIdChanging(value);
				this.SendPropertyChanging();
				this._OldId = value;
				this.SendPropertyChanged("OldId");
				this.OnOldIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255)")]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
	public System.Nullable<double> Longitude
	{
		get
		{
			return this._Longitude;
		}
		set
		{
			if ((this._Longitude != value))
			{
				this.OnLongitudeChanging(value);
				this.SendPropertyChanging();
				this._Longitude = value;
				this.SendPropertyChanged("Longitude");
				this.OnLongitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
	public System.Nullable<double> Latitude
	{
		get
		{
			return this._Latitude;
		}
		set
		{
			if ((this._Latitude != value))
			{
				this.OnLatitudeChanging(value);
				this.SendPropertyChanging();
				this._Latitude = value;
				this.SendPropertyChanged("Latitude");
				this.OnLatitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewGroup", DbType="NVarChar(255)")]
	public string ViewGroup
	{
		get
		{
			return this._ViewGroup;
		}
		set
		{
			if ((this._ViewGroup != value))
			{
				this.OnViewGroupChanging(value);
				this.SendPropertyChanging();
				this._ViewGroup = value;
				this.SendPropertyChanged("ViewGroup");
				this.OnViewGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="VarChar(5)")]
	public string StaffId
	{
		get
		{
			return this._StaffId;
		}
		set
		{
			if ((this._StaffId != value))
			{
				this.OnStaffIdChanging(value);
				this.SendPropertyChanging();
				this._StaffId = value;
				this.SendPropertyChanged("StaffId");
				this.OnStaffIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meter", DbType="VarChar(50)")]
	public string Meter
	{
		get
		{
			return this._Meter;
		}
		set
		{
			if ((this._Meter != value))
			{
				this.OnMeterChanging(value);
				this.SendPropertyChanging();
				this._Meter = value;
				this.SendPropertyChanged("Meter");
				this.OnMeterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transmitter", DbType="VarChar(50)")]
	public string Transmitter
	{
		get
		{
			return this._Transmitter;
		}
		set
		{
			if ((this._Transmitter != value))
			{
				this.OnTransmitterChanging(value);
				this.SendPropertyChanging();
				this._Transmitter = value;
				this.SendPropertyChanged("Transmitter");
				this.OnTransmitterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logger", DbType="NVarChar(50)")]
	public string Logger
	{
		get
		{
			return this._Logger;
		}
		set
		{
			if ((this._Logger != value))
			{
				this.OnLoggerChanging(value);
				this.SendPropertyChanging();
				this._Logger = value;
				this.SendPropertyChanged("Logger");
				this.OnLoggerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfMeterChange", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateOfMeterChange
	{
		get
		{
			return this._DateOfMeterChange;
		}
		set
		{
			if ((this._DateOfMeterChange != value))
			{
				this.OnDateOfMeterChangeChanging(value);
				this.SendPropertyChanging();
				this._DateOfMeterChange = value;
				this.SendPropertyChanged("DateOfMeterChange");
				this.OnDateOfMeterChangeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfLoggerChange", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateOfLoggerChange
	{
		get
		{
			return this._DateOfLoggerChange;
		}
		set
		{
			if ((this._DateOfLoggerChange != value))
			{
				this.OnDateOfLoggerChangeChanging(value);
				this.SendPropertyChanging();
				this._DateOfLoggerChange = value;
				this.SendPropertyChanged("DateOfLoggerChange");
				this.OnDateOfLoggerChangeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfTransmitterChange", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateOfTransmitterChange
	{
		get
		{
			return this._DateOfTransmitterChange;
		}
		set
		{
			if ((this._DateOfTransmitterChange != value))
			{
				this.OnDateOfTransmitterChangeChanging(value);
				this.SendPropertyChanging();
				this._DateOfTransmitterChange = value;
				this.SendPropertyChanged("DateOfTransmitterChange");
				this.OnDateOfTransmitterChangeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBatteryChange", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateOfBatteryChange
	{
		get
		{
			return this._DateOfBatteryChange;
		}
		set
		{
			if ((this._DateOfBatteryChange != value))
			{
				this.OnDateOfBatteryChangeChanging(value);
				this.SendPropertyChanging();
				this._DateOfBatteryChange = value;
				this.SendPropertyChanged("DateOfBatteryChange");
				this.OnDateOfBatteryChangeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfTransmitterBatteryChange", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateOfTransmitterBatteryChange
	{
		get
		{
			return this._DateOfTransmitterBatteryChange;
		}
		set
		{
			if ((this._DateOfTransmitterBatteryChange != value))
			{
				this.OnDateOfTransmitterBatteryChangeChanging(value);
				this.SendPropertyChanging();
				this._DateOfTransmitterBatteryChange = value;
				this.SendPropertyChanged("DateOfTransmitterBatteryChange");
				this.OnDateOfTransmitterBatteryChangeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfLoggerBatteryChange", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateOfLoggerBatteryChange
	{
		get
		{
			return this._DateOfLoggerBatteryChange;
		}
		set
		{
			if ((this._DateOfLoggerBatteryChange != value))
			{
				this.OnDateOfLoggerBatteryChangeChanging(value);
				this.SendPropertyChanging();
				this._DateOfLoggerBatteryChange = value;
				this.SendPropertyChanged("DateOfLoggerBatteryChange");
				this.OnDateOfLoggerBatteryChangeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionOfChange", DbType="NVarChar(255)")]
	public string DescriptionOfChange
	{
		get
		{
			return this._DescriptionOfChange;
		}
		set
		{
			if ((this._DescriptionOfChange != value))
			{
				this.OnDescriptionOfChangeChanging(value);
				this.SendPropertyChanging();
				this._DescriptionOfChange = value;
				this.SendPropertyChanged("DescriptionOfChange");
				this.OnDescriptionOfChangeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeIndex", DbType="Float")]
	public System.Nullable<double> ChangeIndex
	{
		get
		{
			return this._ChangeIndex;
		}
		set
		{
			if ((this._ChangeIndex != value))
			{
				this.OnChangeIndexChanging(value);
				this.SendPropertyChanging();
				this._ChangeIndex = value;
				this.SendPropertyChanged("ChangeIndex");
				this.OnChangeIndexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(5)")]
	public string Level
	{
		get
		{
			return this._Level;
		}
		set
		{
			if ((this._Level != value))
			{
				this.OnLevelChanging(value);
				this.SendPropertyChanging();
				this._Level = value;
				this.SendPropertyChanged("Level");
				this.OnLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(5)")]
	public string Group
	{
		get
		{
			return this._Group;
		}
		set
		{
			if ((this._Group != value))
			{
				this.OnGroupChanging(value);
				this.SendPropertyChanging();
				this._Group = value;
				this.SendPropertyChanged("Group");
				this.OnGroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(5)")]
	public string Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakeoverDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> TakeoverDate
	{
		get
		{
			return this._TakeoverDate;
		}
		set
		{
			if ((this._TakeoverDate != value))
			{
				this.OnTakeoverDateChanging(value);
				this.SendPropertyChanging();
				this._TakeoverDate = value;
				this.SendPropertyChanged("TakeoverDate");
				this.OnTakeoverDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Takeovered", DbType="Bit")]
	public System.Nullable<bool> Takeovered
	{
		get
		{
			return this._Takeovered;
		}
		set
		{
			if ((this._Takeovered != value))
			{
				this.OnTakeoveredChanging(value);
				this.SendPropertyChanging();
				this._Takeovered = value;
				this.SendPropertyChanged("Takeovered");
				this.OnTakeoveredChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(5)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Availability", DbType="VarChar(5)")]
	public string Availability
	{
		get
		{
			return this._Availability;
		}
		set
		{
			if ((this._Availability != value))
			{
				this.OnAvailabilityChanging(value);
				this.SendPropertyChanging();
				this._Availability = value;
				this.SendPropertyChanged("Availability");
				this.OnAvailabilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit")]
	public System.Nullable<bool> Display
	{
		get
		{
			return this._Display;
		}
		set
		{
			if ((this._Display != value))
			{
				this.OnDisplayChanging(value);
				this.SendPropertyChanging();
				this._Display = value;
				this.SendPropertyChanged("Display");
				this.OnDisplayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property", DbType="Bit")]
	public System.Nullable<bool> Property
	{
		get
		{
			return this._Property;
		}
		set
		{
			if ((this._Property != value))
			{
				this.OnPropertyChanging(value);
				this.SendPropertyChanging();
				this._Property = value;
				this.SendPropertyChanged("Property");
				this.OnPropertyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingLogger", DbType="Bit")]
	public System.Nullable<bool> UsingLogger
	{
		get
		{
			return this._UsingLogger;
		}
		set
		{
			if ((this._UsingLogger != value))
			{
				this.OnUsingLoggerChanging(value);
				this.SendPropertyChanging();
				this._UsingLogger = value;
				this.SendPropertyChanged("UsingLogger");
				this.OnUsingLoggerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeterDirection", DbType="VarChar(5)")]
	public string MeterDirection
	{
		get
		{
			return this._MeterDirection;
		}
		set
		{
			if ((this._MeterDirection != value))
			{
				this.OnMeterDirectionChanging(value);
				this.SendPropertyChanging();
				this._MeterDirection = value;
				this.SendPropertyChanged("MeterDirection");
				this.OnMeterDirectionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionCompany", DbType="VarChar(5)")]
	public string ProductionCompany
	{
		get
		{
			return this._ProductionCompany;
		}
		set
		{
			if ((this._ProductionCompany != value))
			{
				this.OnProductionCompanyChanging(value);
				this.SendPropertyChanging();
				this._ProductionCompany = value;
				this.SendPropertyChanged("ProductionCompany");
				this.OnProductionCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IstDistributionCompany", DbType="VarChar(5)")]
	public string IstDistributionCompany
	{
		get
		{
			return this._IstDistributionCompany;
		}
		set
		{
			if ((this._IstDistributionCompany != value))
			{
				this.OnIstDistributionCompanyChanging(value);
				this.SendPropertyChanging();
				this._IstDistributionCompany = value;
				this.SendPropertyChanged("IstDistributionCompany");
				this.OnIstDistributionCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QndDistributionCompany", DbType="VarChar(5)")]
	public string QndDistributionCompany
	{
		get
		{
			return this._QndDistributionCompany;
		}
		set
		{
			if ((this._QndDistributionCompany != value))
			{
				this.OnQndDistributionCompanyChanging(value);
				this.SendPropertyChanging();
				this._QndDistributionCompany = value;
				this.SendPropertyChanged("QndDistributionCompany");
				this.OnQndDistributionCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IstDoNotCalculateReverse", DbType="Bit")]
	public System.Nullable<bool> IstDoNotCalculateReverse
	{
		get
		{
			return this._IstDoNotCalculateReverse;
		}
		set
		{
			if ((this._IstDoNotCalculateReverse != value))
			{
				this.OnIstDoNotCalculateReverseChanging(value);
				this.SendPropertyChanging();
				this._IstDoNotCalculateReverse = value;
				this.SendPropertyChanged("IstDoNotCalculateReverse");
				this.OnIstDoNotCalculateReverseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QndDoNotCalculateReverse", DbType="Bit")]
	public System.Nullable<bool> QndDoNotCalculateReverse
	{
		get
		{
			return this._QndDoNotCalculateReverse;
		}
		set
		{
			if ((this._QndDoNotCalculateReverse != value))
			{
				this.OnQndDoNotCalculateReverseChanging(value);
				this.SendPropertyChanging();
				this._QndDoNotCalculateReverse = value;
				this.SendPropertyChanged("QndDoNotCalculateReverse");
				this.OnQndDoNotCalculateReverseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeIndex1", DbType="Float")]
	public System.Nullable<double> ChangeIndex1
	{
		get
		{
			return this._ChangeIndex1;
		}
		set
		{
			if ((this._ChangeIndex1 != value))
			{
				this.OnChangeIndex1Changing(value);
				this.SendPropertyChanging();
				this._ChangeIndex1 = value;
				this.SendPropertyChanged("ChangeIndex1");
				this.OnChangeIndex1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group2", DbType="VarChar(5)")]
	public string Group2
	{
		get
		{
			return this._Group2;
		}
		set
		{
			if ((this._Group2 != value))
			{
				this.OnGroup2Changing(value);
				this.SendPropertyChanging();
				this._Group2 = value;
				this.SendPropertyChanged("Group2");
				this.OnGroup2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(4000)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverID", DbType="VarChar(50)")]
	public string CoverID
	{
		get
		{
			return this._CoverID;
		}
		set
		{
			if ((this._CoverID != value))
			{
				this.OnCoverIDChanging(value);
				this.SendPropertyChanging();
				this._CoverID = value;
				this.SendPropertyChanged("CoverID");
				this.OnCoverIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group3", DbType="VarChar(5)")]
	public string Group3
	{
		get
		{
			return this._Group3;
		}
		set
		{
			if ((this._Group3 != value))
			{
				this.OnGroup3Changing(value);
				this.SendPropertyChanging();
				this._Group3 = value;
				this.SendPropertyChanged("Group3");
				this.OnGroup3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group4", DbType="VarChar(5)")]
	public string Group4
	{
		get
		{
			return this._Group4;
		}
		set
		{
			if ((this._Group4 != value))
			{
				this.OnGroup4Changing(value);
				this.SendPropertyChanging();
				this._Group4 = value;
				this.SendPropertyChanged("Group4");
				this.OnGroup4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group5", DbType="VarChar(5)")]
	public string Group5
	{
		get
		{
			return this._Group5;
		}
		set
		{
			if ((this._Group5 != value))
			{
				this.OnGroup5Changing(value);
				this.SendPropertyChanging();
				this._Group5 = value;
				this.SendPropertyChanged("Group5");
				this.OnGroup5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="nvarchar(4000)")]
	public string District
	{
		get
		{
			return this._District;
		}
		set
		{
			if ((this._District != value))
			{
				this.OnDistrictChanging(value);
				this.SendPropertyChanging();
				this._District = value;
				this.SendPropertyChanged("District");
				this.OnDistrictChanged();
			}
		}
	}

	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DMAOut", DbType = "NVarChar(50)")]
	public string DMAOut
	{
		get
		{
			return this._DMAOut;
		}
		set
		{
			if ((this._DMAOut != value))
			{
				this.OnDMAOutChanging(value);
				this.SendPropertyChanging();
				this._DMAOut = value;
				this.SendPropertyChanged("DMAOut");
				this.OnDMAOutChanged();
			}
		}
	}

	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class MapSite : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _SiteId;
	
	private string _Location;
	
	private System.Nullable<double> _Longitude;
	
	private System.Nullable<double> _Latitude;
	
	private string _LoggerId;
	
	private long _Nr;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIdChanging(string value);
    partial void OnSiteIdChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLoggerIdChanging(string value);
    partial void OnLoggerIdChanged();
    partial void OnNrChanging(long value);
    partial void OnNrChanged();
    #endregion
	
	public MapSite()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", CanBeNull=false, IsPrimaryKey=true)]
	public string SiteId
	{
		get
		{
			return this._SiteId;
		}
		set
		{
			if ((this._SiteId != value))
			{
				this.OnSiteIdChanging(value);
				this.SendPropertyChanging();
				this._SiteId = value;
				this.SendPropertyChanged("SiteId");
				this.OnSiteIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", CanBeNull=false)]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude")]
	public System.Nullable<double> Longitude
	{
		get
		{
			return this._Longitude;
		}
		set
		{
			if ((this._Longitude != value))
			{
				this.OnLongitudeChanging(value);
				this.SendPropertyChanging();
				this._Longitude = value;
				this.SendPropertyChanged("Longitude");
				this.OnLongitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude")]
	public System.Nullable<double> Latitude
	{
		get
		{
			return this._Latitude;
		}
		set
		{
			if ((this._Latitude != value))
			{
				this.OnLatitudeChanging(value);
				this.SendPropertyChanging();
				this._Latitude = value;
				this.SendPropertyChanged("Latitude");
				this.OnLatitudeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggerId", CanBeNull=false)]
	public string LoggerId
	{
		get
		{
			return this._LoggerId;
		}
		set
		{
			if ((this._LoggerId != value))
			{
				this.OnLoggerIdChanging(value);
				this.SendPropertyChanging();
				this._LoggerId = value;
				this.SendPropertyChanged("LoggerId");
				this.OnLoggerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nr")]
	public long Nr
	{
		get
		{
			return this._Nr;
		}
		set
		{
			if ((this._Nr != value))
			{
				this.OnNrChanging(value);
				this.SendPropertyChanging();
				this._Nr = value;
				this.SendPropertyChanged("Nr");
				this.OnNrChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class MapChannel : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Id;
	
	private string _LoggerId;
	
	private string _Name;
	
	private string _Unit;
	
	private System.Nullable<System.DateTime> _LastTimestamp;
	
	private System.Nullable<double> _LastValue;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnLoggerIdChanging(string value);
    partial void OnLoggerIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnLastTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTimestampChanged();
    partial void OnLastValueChanging(System.Nullable<double> value);
    partial void OnLastValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public MapChannel()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", CanBeNull=false, IsPrimaryKey=true)]
	public string Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggerId", CanBeNull=false)]
	public string LoggerId
	{
		get
		{
			return this._LoggerId;
		}
		set
		{
			if ((this._LoggerId != value))
			{
				this.OnLoggerIdChanging(value);
				this.SendPropertyChanging();
				this._LoggerId = value;
				this.SendPropertyChanged("LoggerId");
				this.OnLoggerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit")]
	public string Unit
	{
		get
		{
			return this._Unit;
		}
		set
		{
			if ((this._Unit != value))
			{
				this.OnUnitChanging(value);
				this.SendPropertyChanging();
				this._Unit = value;
				this.SendPropertyChanged("Unit");
				this.OnUnitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTimestamp")]
	public System.Nullable<System.DateTime> LastTimestamp
	{
		get
		{
			return this._LastTimestamp;
		}
		set
		{
			if ((this._LastTimestamp != value))
			{
				this.OnLastTimestampChanging(value);
				this.SendPropertyChanging();
				this._LastTimestamp = value;
				this.SendPropertyChanged("LastTimestamp");
				this.OnLastTimestampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastValue")]
	public System.Nullable<double> LastValue
	{
		get
		{
			return this._LastValue;
		}
		set
		{
			if ((this._LastValue != value))
			{
				this.OnLastValueChanging(value);
				this.SendPropertyChanging();
				this._LastValue = value;
				this.SendPropertyChanged("LastValue");
				this.OnLastValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class p_History_Site_DeleteResult
{
	
	private string _Level;
	
	private string _Description;
	
	public p_History_Site_DeleteResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
	public string Level
	{
		get
		{
			return this._Level;
		}
		set
		{
			if ((this._Level != value))
			{
				this._Level = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

public partial class TestResult
{
	
	private System.Nullable<System.DateTime> _dt;
	
	public TestResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt", DbType="DateTime")]
	public System.Nullable<System.DateTime> dt
	{
		get
		{
			return this._dt;
		}
		set
		{
			if ((this._dt != value))
			{
				this._dt = value;
			}
		}
	}
}
#pragma warning restore 1591
